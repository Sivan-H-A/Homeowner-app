{"version":3,"sources":["shared/ActiveUserContext.js","components/HomeownerNavbar/HomeownerNavbar.js","assets/background-image.jpg","assets/messages-icon.png","pages/HomePage/HomePage.js","pages/NotFoundPage/NotFoundPage.js","pages/SignupPage/SignupPage.js","App.js","reportWebVitals.js","index.js"],"names":["ActiveUserContext","createContext","HomeownerNavbar","onLogout","activeUser","useContext","Navbar","bg","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","Homepage","useState","showInvalidLogin","email","setEmail","fname","setFname","lname","setLname","apt","setApt","pwd","setPwd","e","a","preventDefault","to","Alert","variant","Form","onSubmit","InputGroup","Control","value","placeholder","onChange","target","Group","controlId","type","Text","Button","block","src","image","Card","message","NotFoundPage","Container","style","alt","SignupPage","showSignupError","community","setCommunity","address","setAddress","city","setCity","Label","App","setActiveUser","exact","path","onLogin","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab01d6fa.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst ActiveUserContext = createContext\r\n\r\nexport default ActiveUserContext;","import React, { useContext } from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nimport './HomeownerNavbar.css'\r\nexport default function HomeownerNavbar({onLogout}) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\" className= \"c-homeowner-navbar\">\r\n            <Navbar.Brand href=\"#/\">HOA System</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    \r\n                   \r\n                </Nav>\r\n                <Nav className=\"ml-auto c-homeowner-navbar-left\">\r\n                    {/* {!activeUser ? <Nav.Link href=\"#/login\">Login</Nav.Link> : null}*/}\r\n                    {!activeUser ? <Nav.Link href=\"#/signup\">Signup</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#\" onClick={() => onLogout()}>Logout</Nav.Link> : null}\r\n                </Nav> \r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background-image.fbce1056.jpg\";","export default __webpack_public_path__ + \"static/media/messages-icon.bedf89d5.png\";","import React, { useState } from 'react';\r\nimport \"./HomePage.css\";\r\nimport image from '../../assets/background-image.jpg'\r\nimport message from '../../assets/messages-icon.png'\r\nimport { Alert, Button, Card, Form, InputGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Homepage() {\r\n\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [fname, setFname] = useState(\"\");\r\n    const [lname, setLname] = useState(\"\");\r\n    const [apt, setApt] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n\r\n    async function login(e) {\r\n        e.preventDefault();\r\n\r\n        // try {\r\n        //     const activeUser = await UserModel.login(email, pwd);\r\n        //     onLogin(activeUser);\r\n        // } catch (error) {\r\n        //     console.error('Error while logging in user', error);\r\n        //     setShowInvalidLogin(true);\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-home\">\r\n            <div className=\"p-home-header\">\r\n                <div className=\"p-home-title col-7\">\r\n                    <h1 className=\"display-4\">Homeowner Association Management System</h1>\r\n                    <h3>All you need to handle your building </h3>\r\n                </div>\r\n                <div className=\"p-login col-3\">\r\n                    <h6>Login to Your Building</h6>\r\n                    <p>or <Link to=\"/signup\">create a new committee</Link></p>\r\n                    {showInvalidLogin ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n                    <Form onSubmit={login} className=\"mb-3\">\r\n                        <InputGroup className=\"mb-3\">\r\n                            <Form.Control value={fname} placeholder=\"First name\" onChange={e => setFname(e.target.value)}/>\r\n                            <Form.Control value={lname}placeholder=\"Last name\" onChange={e => setLname(e.target.value)}/>\r\n                        </InputGroup>\r\n                        \r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email address\" \r\n                                value={email} onChange={e => setEmail(e.target.value)} />\r\n                            <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" \r\n                                value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicAppartment\">\r\n                            <Form.Control type=\"text\" placeholder=\"Enter appartment\" \r\n                                value={apt} onChange={e => setApt(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button  className=\"mb-3\" variant=\"primary\" type=\"submit\" block>\r\n                            Login\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-home-bg-img\">\r\n                <img  className=\"p-home-img\" src={image}></img>\r\n            </div>\r\n            <div className=\"p-home-footer\">\r\n                <Card className=\"p-home-messages col-3\">\r\n                    <img src={message}/>\r\n                    <h3>Sending message accross</h3>\r\n                    <p>You as a committee owner can send messages to all building te</p>\r\n                </Card>\r\n                <Card className=\"p-home-messages col-3\">\r\n                    <img src={message}/>\r\n                    <h3>Sending message accross</h3>\r\n                    <p>You as a committee owner can send messages to all building te</p>\r\n                </Card>\r\n                <Card className=\"p-home-messages col-3\">\r\n                    <img src={message}/>\r\n                    <h3>Sending message accross</h3>\r\n                    <p>You as a committee owner can send messages to all building te</p>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function NotFoundPage() {\r\n    return (\r\n        <Container>\r\n            <img src=\"https://i.stack.imgur.com/6M513.png\" style={{\"width\":\"100%\"}} alt=\"Not Found\"></img>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Alert, Button, Form, InputGroup } from 'react-bootstrap'\r\nimport './SignupPage.css'\r\n\r\nexport default function SignupPage() {\r\n    const [showSignupError, setShowSignupError] = useState(false);\r\n    const [fname, setFname] = useState(\"\");\r\n    const [lname, setLname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [community, setCommunity] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n\r\n\r\n    async function signup(e) {\r\n        e.preventDefault();\r\n        // validation code is missing here...\r\n\r\n        // const activeUser = await UserModel.signup(email, fname, lname, pwd);\r\n        // onLogin(activeUser);\r\n    }\r\n    return (\r\n        <div className=\"p-signup\">\r\n\r\n            <div className=\"p-signup-form\">\r\n                <h1>Create a Committee Member Account</h1>\r\n                <p>Please fill in all the follwoing details:</p>\r\n                {showSignupError ? <Alert variant=\"danger\">Error in Sign Up!</Alert> : null}\r\n                <Form onSubmit={signup}>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <Form.Control value={fname} placeholder=\"First name\" onChange={e => setFname(e.target.value)}/>\r\n                        <Form.Control value={lname}placeholder=\"Last name\" onChange={e => setLname(e.target.value)}/>\r\n                    </InputGroup>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        {/* <Form.Label>Email address</Form.Label> */}\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" \r\n                            value={email} onChange={e => setEmail(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        {/* <Form.Label>Password</Form.Label> */}\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" \r\n                            value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicBuilding\">\r\n                        <Form.Label>Building/Conmmunity Name</Form.Label>\r\n                        <Form.Control type=\"text\" value={community} onChange={e => setCommunity(e.target.value)} />\r\n                    </Form.Group> \r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicBuilding\">\r\n                        {/* <Form.Label>Address</Form.Label> */}\r\n                        <Form.Control type=\"text\" placeholder=\"Address\"  value={address} onChange={e => setAddress(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicBuilding\">\r\n                        {/* <Form.Label>City</Form.Label> */}\r\n                        <Form.Control type=\"text\" placeholder=\"City\"  value={city} onChange={e => setCity(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"mb-3\" variant=\"success\" type=\"submit\" block>\r\n                        Signup\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomeownerNavbar from './components/HomeownerNavbar/HomeownerNavbar';\nimport Homepage from './pages/HomePage/HomePage';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\n\nfunction App() {\n\n  const [activeUser, setActiveUser] = useState(null)\n  \n  return (\n    <div className=\"App\">\n      <HashRouter>\n        {/* <HomeownerNavbar/> */}\n        <Switch>\n          <Route exact path=\"/\" >\n            <HomeownerNavbar onLogout={() => setActiveUser(null)}/>\n            <Homepage/></Route>\n          {/* <Route exact path=\"/login\"><LoginPage onLogin={user => setActiveUser(user)}/></Route>*/}\n          <Route exact path=\"/signup\">\n            <HomeownerNavbar onLogout={() => setActiveUser(null)}/>\n            <SignupPage onLogin={user => setActiveUser(user)}/></Route> \n          <Route path=\"/\"><NotFoundPage/></Route>          \n        </Switch>        \n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}