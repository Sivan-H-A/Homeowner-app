{"version":3,"sources":["shared/ActiveUserContext.js","components/HomeownerNavbar/HomeownerNavbar.js","pages/DashboardPage/DashboardPage.js","assets/background-image.jpg","assets/messages-icon.png","assets/tenants-icon.png","assets/voting-icon.png","assets/issues-icon.png","components/LandingPageCardComponent/LandingPageCardComponent.js","models/CommunityModel.js","models/UserModel.js","assets/person.png","models/MessageModel.js","models/VotingModel.js","utils/BackendDataService.js","pages/HomePage/HomePage.js","components/PageHeaderComponent/PageHeaderComponent.js","components/TenantCardComponent/TenantCardComponent.js","components/NewTenantModal/NewTenantModal.js","components/DeleteModalComponent/DeleteModalComponent.js","pages/TenantsPage/TenantsPage.js","models/CommentModel.js","components/MessageCardComponent/MessageCardComponent.js","components/NewMessageModal/NewMessageModal.js","pages/MessagesPage/MessagesPage.js","pages/NotFoundPage/NotFoundPage.js","pages/SignupPage/SignupPage.js","components/VotingCardComponent/VotingCardComponent.js","components/NewVotingModal/NewVotingModal.js","pages/VotingPage/VotingPage.js","App.js","reportWebVitals.js","index.js"],"names":["ActiveUserContext","createContext","HomeownerNavbar","onLogout","activeUser","useContext","Container","Navbar","collapseOnSelect","fixed","bg","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","role","Link","eventKey","disabled","fullName","split","onClick","DashboardPage","to","LandingPageCardComponent","CardDeck","Card","Img","variant","src","tenant","Title","Text","message","votes","issues","CommunityModel","parseCommunity","this","name","get","street","city","UserModel","parseUser","userName","email","community","apartment","pwd","password","img","url","MessageModel","parseMessage","title","details","priority","comments","createdBy","createDate","readBy","VotingModel","parseVoting","options","dueDate","a","Parse","User","logIn","console","error","address","apt","addNewCommunity","newCommunity","user","set","File","signUp","query","Query","equalTo","find","then","results","Object","destroyAll","CommunityTable","extend","save","communityItem","tenants","map","parseTenant","acl","ACL","setPublicWriteAccess","setPublicReadAccess","setACL","sessionToken","current","become","destroy","response","log","messages","Message","newMessage","comment","messageComments","length","concat","push","newParseMessage","userId","voting","Voting","newVoting","newParseVoting","userVote","index","findIndex","x","splice","tmp","query2","results2","login","signup","getAllCommunityTenants","loadActiveUser","addTenant","updateTenant","deleteTenant","getAllCommunityMessages","addNewMessage","addNewComment","updateMessage","deleteMessage","addUserReadMessage","getAllCommunityVoting","addVoting","changeVotingDate","addUserVoting","getCommunityUsers","getCommunityName","Homepage","onLogin","useState","showInvalidLogin","setShowInvalidLogin","setEmail","setPwd","e","preventDefault","BackendDataService","fluid","Alert","Form","onSubmit","Group","controlId","Control","type","placeholder","value","onChange","target","Button","block","image","alt","PageHeaderComponent","filterSelection","sortBy","onSortChange","onFilterChange","onFilterSelectChange","action","showModal","innerFilterSelection","innerSortBy","Check","inline","label","Row","Col","md","lg","as","custom","size","Label","TenantsCardComponent","onUpdateTenant","onDeleteTenant","Header","Accordion","Body","ButtonGroup","aria-label","NewTeneatModal","show","onClose","onCreate","onUpdate","setFullName","setApt","setImg","clearForm","onTenantClose","useEffect","Modal","onHide","closeButton","column","sm","accept","files","Image","URL","createObjectURL","Footer","DeleteModalComponent","onDelete","toLowerCase","TenantsPage","setTenants","selectedTenant","setSelectedTenant","filterText","setFilterText","setShow","showDelete","setShowDelete","addingTenantError","setAddingTenantError","updateTenantError","setUpdateTenantError","deleteTenantError","setDeletTenantError","communityTenants","getAllTenants","loading","filteredTenants","tenantsCards","currentTenant","newTenant","tempTenantArr","tempArr","filter","includes","toString","data","Spinner","animation","aria-hidden","CommentModel","time","text","MessageCardComponent","onUpdateMessage","onDeleteMessage","onNewCommentCreate","onReadMessage","setComment","setReadBy","commentsCards","handleNewComment","newComment","Date","commentTime","date","getDate","slice","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","getTime","style","display","fontSize","rows","NewMessageModal","setTitle","setDetails","setPriority","onMessageClose","MessagesPage","addingMessageError","setAddingMessageError","newCommentError","setNewCommentError","updateMessageError","setUpdateMessageError","deleteMessageError","setDeletMessageError","setMessages","filterPriority","setFilterPriority","setSortBy","selectedMessage","setSelectedMessage","communityMessages","getAllMessages","filteredMessages","MessageCards","currentMessage","messageIndex","tempMessageArr","handleReadMessage","sort","b","creatDate","NotFoundPage","SignupPage","showSignupError","setShowSignupError","setCommunity","setAddress","setCity","signingUp","setSigningUp","VotingCardComponent","optionsRadio","communityUsers","onUpdateDate","onUserVote","disable","optionChose","setOptionChose","votingDueDate","optionsList","userVoting","voteOption","optionVotes","vote","count","voterCount","reduce","option","labels","datasets","backgroundColor","borderColor","borderWidth","NewVotingModal","setOptions","setDueDate","inputList","setInputList","onVotingClose","handleAddClick","i","list","handleInputChange","handleRemoveClick","VotingPage","votings","setVotings","setCommunityUsers","addingVotingError","setAddingVotingError","changeDateError","setChangeDateError","selectedVoting","setSelectedVoting","buildingName","setBuildingName","communityVoting","users","getBuildingName","getAllVoting","activeVotings","notActiveVotings","activeVotingsCards","notActiveVotingsCards","tempVotingArr","handleUserVote","votingIndex","activeVoting","notActiveVoting","App","setActiveUser","Provider","localStorage","clear","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49214225.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;","import React, { useContext } from 'react'\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nimport './HomeownerNavbar.css'\r\nimport { BsBuilding } from 'react-icons/bs';\r\nimport { GiHand } from 'react-icons/gi'\r\nimport { IoIosPeople , IoIosLogOut, IoIosCreate} from 'react-icons/io'\r\nimport { SiGooglemessages } from 'react-icons/si'\r\nimport { GiVote } from 'react-icons/gi'\r\nexport default function HomeownerNavbar({onLogout}) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    return (\r\n        <Container>\r\n            <Navbar collapseOnSelect fixed=\"top\" bg=\"light\" expand=\"lg\" className= \"c-homeowner-navbar\">\r\n                <Navbar.Brand href=\"#/\"><BsBuilding /></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {activeUser && activeUser.role === 1? <Nav.Link href=\"#/tenants\">Tenants<IoIosPeople /></Nav.Link> : null}\r\n                        {activeUser ? <Nav.Link href=\"#/messages\">Messages<SiGooglemessages/></Nav.Link> : null}\r\n                        {activeUser ? <Nav.Link href=\"#/voting\">Voting<GiVote/></Nav.Link> : null}\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        {!activeUser ? <Nav.Link href=\"#/signup\">Signup<IoIosCreate/></Nav.Link> : null}\r\n                        {activeUser ? <Nav.Link eventKey=\"disabled\" disabled>Welcome \r\n                            {` ${activeUser.fullName? activeUser.fullName.split(\" \")[0]:\"\"}`}<GiHand /> </Nav.Link> :null}\r\n                        {activeUser ? <Nav.Link href=\"#\" onClick={() => onLogout()}>Logout<IoIosLogOut/></Nav.Link> : null}\r\n\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>    \r\n        </Container>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nexport default function DashboardPage() {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if(!activeUser){\r\n       return <Redirect to='/'/>\r\n    }\r\n    return (\r\n        <div>\r\n            Dashboard\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background-image.eb8723f6.jpg\";","export default __webpack_public_path__ + \"static/media/messages-icon.eb9fecda.png\";","export default __webpack_public_path__ + \"static/media/tenants-icon.64b5bfa4.png\";","export default __webpack_public_path__ + \"static/media/voting-icon.14692da9.png\";","export default __webpack_public_path__ + \"static/media/issues-icon.55281240.png\";","import React from 'react'\r\nimport { Card, CardDeck } from 'react-bootstrap'\r\nimport message from '../../assets/messages-icon.png';\r\nimport tenant from '../../assets/tenants-icon.png'\r\nimport votes from '../../assets/voting-icon.png'\r\nimport issues from '../../assets/issues-icon.png'\r\n\r\nexport default function LandingPageCardComponent() {\r\n    return (\r\n        <CardDeck>\r\n           <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={tenant}/>\r\n                <Card.Title>Managing building members</Card.Title>\r\n                <Card.Text>You as a committee owner can add or remove tenants from the building account.</Card.Text>\r\n            </Card>\r\n            <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={message}/>\r\n                <Card.Title>Manage messages system</Card.Title>\r\n                <Card.Text>You as a committee owner can post messages to all building tenants. \r\n                    Also can delete/update posted message if needed. A tenant can view, filter and search messages.</Card.Text>\r\n            </Card>\r\n            <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={votes}/>\r\n                <Card.Title>Manage voting system</Card.Title>\r\n                <Card.Text>You as a committee owner can create a new voting, \r\n                    updating the information of the vote and observe the voting on-going progress. \r\n                    A building member can view all active voting and participate in desicion.</Card.Text>\r\n            </Card>\r\n            <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={issues}/>\r\n                <Card.Title>Manage building issues</Card.Title>\r\n                <Card.Text>You as a building member can report issues with priority, have the ability to view and update/delete/close the issue created by you.\r\n                    As a committee member you can view all issues and comment then if needed.</Card.Text>\r\n            </Card>\r\n\r\n            \r\n        </CardDeck>\r\n    )\r\n}\r\n","export default class CommunityModel{\r\n    constructor(parseCommunity){\r\n        this.id = parseCommunity.id;\r\n        this.name = parseCommunity.get(\"name\");\r\n        this.street = parseCommunity.get(\"street\");\r\n        this.city = parseCommunity.get(\"city\");\r\n        this.parseCommunity = parseCommunity;\r\n    }\r\n}","export default class UserModel {\r\n    #parseUser\r\n    //role =1 community member role = 2 tenant\r\n    constructor(parseUser){\r\n        this.id = parseUser.id;\r\n        this.fullName = parseUser.get(\"fullName\");\r\n        this.userName = parseUser.get(\"username\");\r\n        this.email = parseUser.get(\"username\");\r\n        this.role = parseUser.get(\"role\");\r\n        this.community = parseUser.get(\"community\");\r\n        this.apartment = parseUser.get(\"apartment\");\r\n        this.pwd = parseUser.password;\r\n        if(parseUser.get(\"image\")){\r\n            this.img = parseUser.get(\"image\").url();\r\n        }\r\n        this.#parseUser = parseUser;\r\n\r\n    }\r\n    static activeUser = null;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/person.8aa599f8.png\";","export default class MessageModel{\r\n    constructor(parseMessage){\r\n        this.id = parseMessage.id;\r\n        this.title = parseMessage.get(\"title\");\r\n        this.details = parseMessage.get(\"details\");\r\n        this.priority = parseMessage.get(\"priority\");\r\n        this.community = parseMessage.get(\"community\");\r\n        if(parseMessage.get(\"comments\")){\r\n            this.comments = parseMessage.get(\"comments\");     \r\n        }\r\n        this.createdBy = parseMessage.get(\"createdBy\");\r\n        if(parseMessage.get(\"image\")){\r\n            this.img = parseMessage.get(\"image\").url();\r\n        }\r\n        this.createDate = parseMessage.get(\"createdAt\");\r\n        this.readBy = parseMessage.get(\"readBy\");\r\n    }\r\n\r\n}\r\n\r\n","export default class VotingModel{\r\n    constructor(parseVoting){\r\n        this.id = parseVoting.id;\r\n        this.createdBy = parseVoting.get(\"createdBy\");\r\n        this.createDate = parseVoting.get(\"createdAt\");\r\n        this.title = parseVoting.get(\"title\");\r\n        this.details = parseVoting.get(\"details\");\r\n        this.options = parseVoting.get(\"options\");\r\n        this.dueDate = parseVoting.get(\"dueDate\");\r\n        this.votes = parseVoting.get(\"votes\");\r\n        this.community = parseVoting.get(\"community\");\r\n    }\r\n}","import Parse from 'parse';\r\nimport CommunityModel from '../models/CommunityModel';\r\nimport UserModel from '../models/UserModel';\r\nimport image from '../assets/person.png';\r\nimport MessageModel from '../models/MessageModel';\r\nimport VotingModel from '../models/VotingModel';\r\n\r\nasync function login(email, pwd){\r\n    if(email && pwd){\r\n        const parseUser = await Parse.User.logIn(email, pwd);\r\n        UserModel.activeUser = new UserModel(parseUser);\r\n    }\r\n    else{\r\n        UserModel.activeUser = null;\r\n        console.error(\"cannot login - missing credentials\")\r\n    }\r\n    return UserModel.activeUser;\r\n}\r\nfunction loadActiveUser(){\r\n    if(Parse.User.current()){\r\n        UserModel.activeUser = new UserModel(Parse.User.current());\r\n    }\r\n    else{\r\n        UserModel.activeUser =null;\r\n    }\r\n    return UserModel.activeUser;\r\n}\r\nasync function signup(fullName, email, pwd, community, address, apt, city, img) {  \r\n    const newCommunity = await addNewCommunity(community, address, city); \r\n\r\n    const user = new Parse.User()\r\n    user.set('username', email);\r\n    user.set('email', email);\r\n    user.set('fullName', fullName);\r\n    user.set('password', pwd);\r\n    user.set('apartment',apt);\r\n    if(img){\r\n        user.set('image',new Parse.File(img.name,img));\r\n    }\r\n    user.set('role', 1)\r\n    user.set('community', newCommunity.parseCommunity);\r\n\r\n    try{\r\n        const parseUser = await user.signUp();\r\n        UserModel.activeUser = new UserModel(parseUser);\r\n        return UserModel.activeUser;\r\n    }\r\n    catch(e){\r\n        var query = new Parse.Query('Community');\r\n        query.equalTo('objectId', newCommunity.parseCommunity.id);\r\n        query.find().then(function(results) {\r\n            return Parse.Object.destroyAll(results);\r\n        });\r\n        throw(e);\r\n    }\r\n}\r\nasync function addNewCommunity(community, address, city){\r\n    const CommunityTable = Parse.Object.extend('Community');\r\n    const newCommunity = new CommunityTable();\r\n    newCommunity.set('name',community);\r\n    newCommunity.set('street',address);\r\n    newCommunity.set('city',city);\r\n    const parseCommunity = await newCommunity.save();\r\n    const communityItem = new CommunityModel(parseCommunity);\r\n    return communityItem;\r\n}\r\nasync function getAllCommunityTenants(community){\r\n    var query = new Parse.Query('User');\r\n    query.equalTo('community', community);\r\n    const results = await query.find();\r\n    const tenants = results.map(parseTenant => new UserModel(parseTenant));\r\n    return tenants;\r\n}\r\nasync function addTenant(fullName, email, pwd, community, apt, img){\r\n    const user = new Parse.User()\r\n    user.set('username', email);\r\n    user.set('email', email);\r\n    user.set('fullName', fullName);\r\n    user.set('password', pwd);\r\n    if(img){\r\n        user.set('image',new Parse.File(img.name,img));\r\n    }\r\n    user.set('apartment',apt);\r\n    user.set('role', 2)\r\n    user.set('community', community);\r\n    const acl = new Parse.ACL();\r\n    acl.setPublicWriteAccess(true);\r\n    acl.setPublicReadAccess(true);\r\n\r\n    user.setACL(acl);\r\n\r\n    const sessionToken = Parse.User.current().get(\"sessionToken\");\r\n    const parseUser = await user.signUp();\r\n    Parse.User.become(sessionToken);\r\n    return new UserModel(parseUser);\r\n}\r\nasync function updateTenant(tenant,fullName,email,apt,img){ \r\n    const sessionToken = Parse.User.current().get(\"sessionToken\");\r\n    const query = new Parse.Query('User');\r\n    const user = await query.get(tenant.id);\r\n    user.set('username', email? email:tenant.email);\r\n    user.set('email', email? email:tenant.email);\r\n    user.set('fullName', fullName? fullName : tenant.fullName);\r\n    user.set('apartment', apt? apt : tenant.apartment);\r\n    if(typeof img === 'object'){\r\n        user.set('image', new Parse.File(img.name,img));\r\n    }\r\n    const parseUser = await user.save();\r\n    Parse.User.become(sessionToken);\r\n    return new UserModel(parseUser); \r\n}\r\nasync function deleteTenant(tenant){\r\n    const query = new Parse.Query('User');\r\n    // Finds the user by its ID\r\n    const user = await query.get(tenant.id); \r\n        // Invokes the \"destroy\" method to delete the user\r\n    user.destroy().then((response) => {\r\n        console.log('Deleted user', response);\r\n        return new UserModel(response);\r\n    }, (error) => {\r\n        console.error('Error while deleting user', error);\r\n        throw(error);\r\n    });   \r\n}\r\nasync function getAllCommunityMessages(community){\r\n    const query = new Parse.Query('Message');\r\n    query.equalTo('community', community);\r\n    const results = await query.find();\r\n    const messages = results.map(parseMessage => new MessageModel(parseMessage));\r\n    return messages;\r\n}\r\nasync function addNewMessage(title,details,priority,img){\r\n    const Message = Parse.Object.extend('Message');\r\n    const newMessage = new Message();\r\n    \r\n    newMessage.set('createdBy', Parse.User.current());\r\n    newMessage.set('title', title);\r\n    newMessage.set('details', details);\r\n    newMessage.set('priority', priority);\r\n    if(img){\r\n        newMessage.set('image', new Parse.File(img.name, img));\r\n    }\r\n    newMessage.set('community', UserModel.activeUser.community);  \r\n    newMessage.set('readBy',[Parse.User.current().id]);\r\n  \r\n    const parseMessage = await newMessage.save();\r\n\r\n    return new MessageModel(parseMessage);\r\n}\r\nasync function addNewComment(message,comment){\r\n    const query = new Parse.Query('Message');\r\n    const parseMessage = await query.get(message.id);\r\n    let messageComments=[];\r\n    // here you put the objectId that you want to update\r\n    if(message.comments && message.comments.length>0){\r\n        messageComments = messageComments.concat(message.comments);\r\n        messageComments.push(comment);\r\n        //add\r\n    }else{\r\n        messageComments.push(comment);\r\n    }\r\n    parseMessage.set(\"comments\", messageComments);\r\n    \r\n    const newParseMessage = await parseMessage.save(); \r\n\r\n    return new MessageModel(newParseMessage);\r\n}\r\nasync function updateMessage(message, title, details, priority, img){\r\n    const query = new Parse.Query('Message');\r\n    const parseMessage = await query.get(message.id);\r\n    parseMessage.set('title', title);\r\n    parseMessage.set('details', details);\r\n    parseMessage.set('priority', priority);\r\n    if(typeof img === 'object'){\r\n        parseMessage.set('image', new Parse.File(img.name,img));\r\n    }   \r\n    const newParseMessage = await parseMessage.save();\r\n    return new MessageModel(newParseMessage);\r\n}\r\nasync function deleteMessage(message){\r\n    const query = new Parse.Query('Message');\r\n    // Finds the user by its ID\r\n    const parseMessage = await query.get(message.id); \r\n        // Invokes the \"destroy\" method to delete the user\r\n    parseMessage.destroy().then((response) => {\r\n        console.log('Deleted user', response);\r\n    }, (error) => {\r\n        console.error('Error while deleting user', error);\r\n        throw(error);\r\n    });   \r\n}\r\nasync function addUserReadMessage(message, userId){\r\n    const query = new Parse.Query('Message');\r\n    // Finds the user by its ID\r\n    const parseMessage = await query.get(message.id);\r\n    if(message && message.readBy){\r\n        parseMessage.set('readBy', message.readBy.concat(userId));\r\n    }else{\r\n        parseMessage.set('readBy', [userId]);\r\n    }   \r\n    const newParseMessage = await parseMessage.save();\r\n    return new MessageModel(newParseMessage);\r\n}\r\nasync function getAllCommunityVoting(community){\r\n    const query = new Parse.Query('Voting');\r\n    query.equalTo('community', community);\r\n    const results = await query.find();\r\n    const voting = results.map(parseVoting => new VotingModel(parseVoting));\r\n    return voting;\r\n}\r\nasync function addVoting(title, details,options,dueDate){\r\n    const Voting = Parse.Object.extend('Voting');\r\n    const newVoting = new Voting();\r\n    \r\n    newVoting.set('createdBy', Parse.User.current());\r\n    newVoting.set('title', title);\r\n    newVoting.set('details', details);\r\n    newVoting.set('options', options);\r\n    newVoting.set('dueDate', dueDate);\r\n    newVoting.set('community', UserModel.activeUser.community);  \r\n  \r\n    const parseVoting = await newVoting.save();\r\n\r\n    return new VotingModel(parseVoting);\r\n\r\n}\r\nasync function changeVotingDate(voting, dueDate ){\r\n    const query = new Parse.Query('Voting');\r\n    const parseVoting = await query.get(voting.id);\r\n    parseVoting.set('dueDate', dueDate);\r\n\r\n    const newParseVoting = await parseVoting.save();\r\n    return new VotingModel(newParseVoting);\r\n}\r\nasync function addUserVoting(voting, userVote){\r\n    const query = new Parse.Query('Voting');\r\n    const parseVoting = await query.get(voting.id);\r\n    const votes = parseVoting.get(\"votes\");\r\n\r\n    // const newVotes =null;\r\n    if(votes&& votes.length>0){\r\n        // newVotes = newVotes.concat(votes);\r\n        const index = votes.findIndex(x=>x.user.id===userVote.user.id);\r\n        if(index>=0){\r\n            votes.splice(index,1, userVote);\r\n        }else{\r\n            votes.push(userVote);\r\n        }\r\n        parseVoting.set(\"votes\",votes);\r\n    }else{\r\n        const tmp = [];\r\n        tmp.push(userVote);\r\n        parseVoting.set(\"votes\",tmp);\r\n    }   \r\n    const newParseVoting = await parseVoting.save();\r\n    return new VotingModel(newParseVoting);\r\n}\r\nasync function getCommunityUsers(community){\r\n    const query = new Parse.Query('Community');\r\n    query.equalTo('objectId', community.id);\r\n    const results = await query.find();\r\n    var query2 = new Parse.Query('User');\r\n    query2.equalTo('community', results[0]);\r\n    const results2 = await query2.find();\r\n    return results2.map(parseTenant => new UserModel(parseTenant));\r\n}\r\nasync function getCommunityName(community){\r\n    const query = new Parse.Query('Community');\r\n    query.equalTo('objectId', community.id);\r\n    const results = await query.find();\r\n    return results[0].get(\"name\");\r\n}\r\nexport default  {login,signup, getAllCommunityTenants, \r\n                loadActiveUser, addTenant, updateTenant, deleteTenant, \r\n                getAllCommunityMessages, addNewMessage, addNewComment,\r\n                updateMessage, deleteMessage, addUserReadMessage,\r\n                getAllCommunityVoting, addVoting ,changeVotingDate,\r\n                addUserVoting, getCommunityUsers, getCommunityName} ","import React, { useContext, useState } from 'react';\r\nimport \"./HomePage.css\";\r\nimport image from '../../assets/background-image.jpg';\r\nimport LandingPageCardComponent from '../../components/LandingPageCardComponent/LandingPageCardComponent';\r\nimport { Alert, Button, Container, Form } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\nimport { IoIosLogIn } from 'react-icons/io';\r\nexport default function Homepage({onLogin}) {\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    // if (activeUser) {\r\n    //     return <Redirect to=\"/dashboard\"/>\r\n    // }\r\n\r\n    async function login(e) {\r\n        e.preventDefault();\r\n        let activeUser = null;\r\n        try {\r\n            activeUser = await BackendDataService.login(email,pwd);\r\n            onLogin(activeUser);\r\n        } catch (error) {\r\n            console.error('Error while logging in user', error);\r\n            setShowInvalidLogin(true);\r\n        }\r\n    }\r\n    return (\r\n        <Container fluid className=\"p-home\">\r\n            <div className=\"p-home-header\">\r\n                <div className={!activeUser? `p-home-title col-sm-6 col-md-8`: `p-home-title col-12`}>\r\n                    <h1 className=\"display-4\">Homeowner Association Management System</h1>\r\n                    <h3>All you need to handle your building </h3>\r\n                </div>\r\n                {!activeUser ?\r\n                    <div className=\"p-login col-md-3\">\r\n                        <h4>Login to Your Building</h4>\r\n                        <p>or <Link to=\"/signup\">create a new committee</Link></p>\r\n                        {showInvalidLogin ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n                        <Form onSubmit={login} className=\"mb-3\">                      \r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email address\" \r\n                                    value={email} onChange={e => setEmail(e.target.value)} />\r\n                                <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" \r\n                                    value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Button  className=\"mb-3\" variant=\"primary\" type=\"submit\" block>\r\n                                Login <IoIosLogIn/>\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                :null }\r\n            </div>\r\n            <div className=\"p-home-bg-img\">\r\n                <img  className=\"p-home-img\" src={image} alt=\"Landing page img\"></img>\r\n            </div>\r\n            <div className=\"p-home-footer\">\r\n                <LandingPageCardComponent/>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport './PageHeaderComponent.css'\r\nexport default function PageHeaderComponent({placeholder,filterSelection,sortBy,onSortChange, onFilterChange, onFilterSelectChange, action, showModal}) {\r\n    let innerFilterSelection =\"\";\r\n    let innerSortBy =\"\";\r\n    \r\n    if (filterSelection){\r\n        innerFilterSelection = filterSelection.map(x=>{\r\n            return <option>{x}</option>\r\n        });\r\n    }\r\n    if (sortBy){\r\n        innerSortBy= sortBy.map(x=>{\r\n            return <Form.Check inline \r\n                        type=\"radio\" \r\n                        name=\"sorting\" \r\n                        label={x}\r\n                        value={x} \r\n                        onChange={(e)=>onSortChange(e.target.value)}/>   \r\n        });\r\n    }\r\n\r\n    return (     \r\n        <Form className=\"c-page-header\">\r\n            <Row>\r\n                <Col>               \r\n                    {placeholder? <Form.Control type=\"text\" placeholder={placeholder} onChange={(e)=>onFilterChange(e.target.value)}/>:null}\r\n                </Col>\r\n                {filterSelection ? \r\n                    <Col md={3} lg={2}>\r\n                        <Form.Control as=\"select\" custom size=\"sm\" onChange = {(e)=>onFilterSelectChange(e.target.value)}>\r\n                            {innerFilterSelection}\r\n                        </Form.Control>\r\n                    </Col>\r\n                :null}\r\n                {innerSortBy? \r\n                    <Col className=\"c-header-sort\" md={5} lg={4}>\r\n                        <Form.Label>Sort by: </Form.Label>\r\n                        {innerSortBy}\r\n                    </Col>\r\n                :null}\r\n            </Row> \r\n            <Row>    \r\n                <Col className=\"c-b-end\">\r\n                    {action?\r\n                        <Button  variant=\"primary\" onClick={showModal}>\r\n                            {action}\r\n                        </Button>\r\n                    :null}\r\n                </Col>\r\n            </Row>         \r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Accordion, Button, ButtonGroup, Card } from 'react-bootstrap'\r\nimport './TenantCardComponent.css'\r\nexport default function TenantsCardComponent({tenant, index , onUpdateTenant, onDeleteTenant}) {\r\n    return (\r\n        <Card className=\"c-tenant\">\r\n            <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey={index}>\r\n                    <h5>{tenant.fullName}{tenant.role===1? \", Admin\":null}</h5>\r\n                </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey={index}>\r\n                <div className=\"c-tenant-info\">\r\n                    <div className=\"c-tenant-img\">\r\n                        <Card.Img variant=\"top\" src={tenant.img} />\r\n                    </div>\r\n                    <Card.Body>\r\n                        <Card.Title>Name: {tenant.fullName}</Card.Title>\r\n                        <Card.Text>Email: {tenant.email}</Card.Text>\r\n                        <Card.Text>Apt: {tenant.apartment}</Card.Text>\r\n                    </Card.Body>\r\n                    <div className=\"c-tenant-button\">\r\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Basic example\">\r\n                            <Button onClick={()=>onUpdateTenant(index)}>Update</Button>\r\n                            {tenant.role!==1 ? <Button onClick={()=>onDeleteTenant(index)} variant=\"danger\">Delete</Button> :null}\r\n                        </ButtonGroup>\r\n                    </div>\r\n                </div>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Image, Modal, Row } from 'react-bootstrap'\r\nimport './NewTenantModal.css'\r\nexport default function NewTeneatModal({ show, onClose, onCreate , tenant, onUpdate}) {\r\n\r\n    const [fullName, setFullName] = useState(\"\" );\r\n    const [email, setEmail] = useState(\"\" );\r\n    const [apt, setApt] = useState(\"\" );\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [img, setImg] = useState(null);\r\n    useEffect(() => {\r\n        if(tenant){\r\n            setFullName(tenant.fullName);\r\n            setEmail(tenant.email);\r\n            setApt(tenant.apartment);\r\n            setImg(tenant.img);\r\n        }\r\n        \r\n    }, [tenant])\r\n\r\n    function createTenant(){\r\n        if(tenant){\r\n            onUpdate(fullName,email,apt,img);\r\n        }else{\r\n            onCreate(fullName,email,apt, pwd,img);\r\n        }\r\n        clearForm();\r\n        onClose();\r\n    }\r\n\r\n    function clearForm() {\r\n        setFullName(\"\");\r\n        setEmail(\"\");\r\n        setApt(\"\");\r\n        setPwd(\"\");\r\n        setImg(null);\r\n    }\r\n    function onTenantClose(){\r\n        clearForm();\r\n        onClose();\r\n    }\r\n    function handleFileChange(e){\r\n        if (e.target.files.length === 1) {\r\n            setImg(e.target.files[0]);\r\n        } else {\r\n            setImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={onTenantClose} className=\"c-new-tenant\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title className=\"text-center\">{tenant ? \"Update Tenant\" :\"New Tenant\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form className=\"c-tenant-form\">\r\n                    <Form.Group as={Row} >\r\n                        <Form.Label column sm={4}>\r\n                            Full Name\r\n                        </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control value={fullName} placeholder=\"First name\" onChange={e => setFullName(e.target.value)}/>                        \r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formBasicEmail\">\r\n                        <Form.Label column sm={4}>Email address: </Form.Label>\r\n                        <Col>\r\n                            <Form.Control sm={8} type=\"email\" placeholder=\"Email\" \r\n                                value={email} onChange={e => setEmail(e.target.value)} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    {!tenant ?\r\n                        <Form.Group as={Row} controlId=\"formBasicPassword\">\r\n                            <Form.Label column sm={4}>Password: </Form.Label>\r\n                            <Col  sm={8}>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" \r\n                                    value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        :null\r\n                    }\r\n                    <Form.Group as={Row} controlId=\"formBasicApt\">\r\n                        <Form.Label column sm={4}>Apartment: </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control  type=\"number\" placeholder=\"Apartment\"  value={apt} onChange={e => setApt(e.target.value)} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalImg\">\r\n                        <Form.Label column sm={4}>Tenant Image:</Form.Label>\r\n                        <Col>\r\n                            <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange}/>                        \r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Image src={img ? typeof img === 'object' ? URL.createObjectURL(img) : img : \"\" }/>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onTenantClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={createTenant}>\r\n                    {tenant ? \"Update Tenant\" : \"Create Tenant\"}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nexport default function DeleteModalComponent({show,onClose, title,name, onDelete}) {\r\n    return (\r\n        <Modal show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Delete {title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Are you sure you want to delete selected {title.toLowerCase()}: {name}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={onClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={onDelete}>\r\n                    Delete {title}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Container, Accordion, Alert, Button, Spinner } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport PageHeaderComponent from '../../components/PageHeaderComponent/PageHeaderComponent';\r\nimport TenantsCardComponent from '../../components/TenantCardComponent/TenantCardComponent';\r\nimport NewTenantModal from '../../components/NewTenantModal/NewTenantModal'\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\nimport './TenantsPage.css';\r\nimport DeleteModalComponent from '../../components/DeleteModalComponent/DeleteModalComponent';\r\nimport CommunityModel from '../../models/CommunityModel';\r\n\r\nexport default function TenantsPage() {\r\n    const [tenants, setTenants] = useState([]);\r\n    const [selectedTenant, setSelectedTenant] = useState(\"\");\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [showDelete, setShowDelete] = useState(false)\r\n    const [addingTenantError, setAddingTenantError] = useState(false);\r\n    const [updateTenantError, setUpdateTenantError] = useState(false);\r\n    const [deleteTenantError, setDeletTenantError] = useState(false)\r\n    const activeUser = useContext(ActiveUserContext);\r\n    useEffect(() => {\r\n        async function getAllTenants(){  \r\n            const communityTenants = await BackendDataService.getAllCommunityTenants(activeUser.community);\r\n            setTenants(communityTenants);     \r\n        }   \r\n        if (activeUser){\r\n            getAllTenants();\r\n        }\r\n    }, [activeUser]);\r\n    \r\n    if(!activeUser || activeUser.role!==1){\r\n        return <Redirect to= '/' />\r\n    }\r\n    let loading = true;\r\n    let filteredTenants=[];\r\n    let tenantsCards=[];\r\n    let currentTenant=\"\";\r\n    const community = new CommunityModel(activeUser.community); \r\n    if(tenants && tenants.length>0)\r\n    {\r\n        if(filterText){\r\n            filteredTenants = tenants.filter(tenant=> {\r\n                return  tenant.fullName.includes(filterText) ||\r\n                        tenant.email.includes(filterText)||\r\n                        tenant.apartment.includes(filterText);\r\n            });\r\n        }\r\n        else{\r\n            filteredTenants = filteredTenants.concat(tenants);\r\n        }\r\n        tenantsCards = filteredTenants.map((tenant, index) =>{\r\n            return <TenantsCardComponent key={index} tenant={tenant} \r\n                                        index={index.toString()} \r\n                                        onUpdateTenant={onUpdateTenant} \r\n                                        onDeleteTenant={onDeleteTenant} />           \r\n        });\r\n        loading = false;\r\n    }\r\n    \r\n    function onClose(){\r\n        setShow(false);\r\n        setShowDelete(false)\r\n        setSelectedTenant(\"\");\r\n    }\r\n    function onUpdateTenant(index){\r\n        currentTenant = filteredTenants[index];\r\n        setSelectedTenant(currentTenant);\r\n        setShow(true)\r\n    }\r\n    function onDeleteTenant(index){\r\n        currentTenant = filteredTenants[index];\r\n        setSelectedTenant(currentTenant);\r\n        setShowDelete(true);\r\n    }   \r\n    async function handleNewTenant(fullName,email,apt, pwd, img){\r\n        try{\r\n            const tenant = await BackendDataService.addTenant(fullName, email, pwd, activeUser.community, apt, img);\r\n            setTenants(tenants.concat(tenant));\r\n            setAddingTenantError(false);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            setAddingTenantError(true);\r\n        }\r\n        setShow(false);\r\n    }\r\n    async function handleUpdateTenant(fullName, email, apt, img){\r\n        if(fullName!==selectedTenant.fullName || \r\n            email!==selectedTenant.email || \r\n            apt!==selectedTenant.apartment || \r\n            img!==selectedTenant.img){\r\n            try{     \r\n                const newTenant = await BackendDataService.updateTenant(selectedTenant, fullName, email, apt, img);\r\n                let index = tenants.findIndex(x=>x.id===selectedTenant.id);\r\n                let tempTenantArr = [];\r\n                tenants.splice(index,1,newTenant);\r\n                tempTenantArr = tempTenantArr.concat(tenants);\r\n                setTenants(tempTenantArr);\r\n                setUpdateTenantError(false);\r\n            }              \r\n            catch(e){\r\n                console.log(e);\r\n                setUpdateTenantError(true);\r\n            }\r\n        }\r\n        setShow(false);\r\n        setSelectedTenant(\"\");\r\n    }\r\n    async function handleDeleteTenant(){\r\n        try{\r\n            BackendDataService.deleteTenant(selectedTenant);\r\n            const tempArr = tenants.filter(tenant=>tenant.id!==selectedTenant.id);\r\n            setTenants(tempArr);\r\n            setDeletTenantError(false);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            setDeletTenantError(true);\r\n        }\r\n        setShowDelete(false)\r\n        setSelectedTenant(\"\");\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-tenant\">\r\n            <h2>Tenants for building: {community? community.name:\"\"}</h2>\r\n            <PageHeaderComponent placeholder=\"Filter by name/email/apartment:\" \r\n                                onFilterChange={(data)=>setFilterText(data)} \r\n                                action=\"Add Tenant\"\r\n                                showModal={()=>setShow(true)}/>\r\n            {addingTenantError? <Alert variant=\"danger\">Error in adding new tenant. Please try again.</Alert> : null}\r\n            {updateTenantError? <Alert variant=\"danger\">Error in updating a tenant. Please try again.</Alert> : null}\r\n            {deleteTenantError? <Alert variant=\"danger\">Error in deleting a tenant. Please try again.</Alert> : null}\r\n            {loading ? \r\n                <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                    />\r\n                    <span className=\"sr-only\">Signing...</span>\r\n                </Button>\r\n                : <Accordion>\r\n                    {tenantsCards.length> 0 ? tenantsCards :null}\r\n                </Accordion>\r\n            }\r\n            <NewTenantModal show={show} \r\n                            onClose={onClose}                   \r\n                            onCreate={handleNewTenant}\r\n                            tenant={selectedTenant} \r\n                            onUpdate={handleUpdateTenant}/>\r\n            <DeleteModalComponent show={showDelete}\r\n                                onClose={onClose}\r\n                                title=\"Tenant\"\r\n                                name={selectedTenant.fullName}\r\n                                onDelete={handleDeleteTenant}/>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","export default class CommentModel{\r\n    constructor(time,text,user){\r\n        this.time = time;\r\n        this.text = text;\r\n        this.user = user;\r\n    }\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Accordion, Button, ButtonGroup, Card, Col, Form, ListGroup, Row } from 'react-bootstrap'\r\nimport CommentModel from '../../models/CommentModel';\r\nimport './MessageCardComponent.css';\r\nimport { FaArrowCircleRight } from 'react-icons/fa';\r\nimport { IoIosMailOpen, IoIosMailUnread } from 'react-icons/io';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\n\r\nexport default function MessageCardComponent({message, index, onUpdateMessage, onDeleteMessage, onNewCommentCreate, onReadMessage}) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [comment,setComment] = useState(\"\");\r\n    const [readBy, setReadBy] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(message && message.readBy){\r\n            if(message.readBy.includes(activeUser.id)){\r\n                setReadBy(true);\r\n            }\r\n        }\r\n    }, [message])\r\n    let commentsCards=[]\r\n    if(message.comments && message.comments.length>0){      \r\n        commentsCards = message.comments.map(comment=>{\r\n            const commentTime = getTime(comment.time);\r\n        \r\n            return <Card className=\"c-comment\">\r\n                        <div>\r\n                            <Card.Img variant=\"top\" src={comment.user.img} />\r\n                        </div>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                {comment.user.fullName}:    \r\n                                <Card.Text style={{display: \"inline\", fontSize: \"1rem\"}}>\r\n                                {` ${commentTime}`}\r\n                                </Card.Text>  \r\n                            </Card.Title>\r\n                            <Card.Text>{comment.text}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n        })\r\n    }\r\n    function getTime(time){\r\n        let date = (\"0\" + time.getDate()).slice(-2);\r\n        // current month\r\n        let month = (\"0\" + (time.getMonth() + 1)).slice(-2);\r\n        // current year\r\n        let year = time.getFullYear();\r\n        // current hours\r\n        let hours = time.getHours();\r\n        // current minutes\r\n        let minutes = (\"0\" + time.getMinutes()).slice(-2); \r\n        return month+\"/\"+date+\"/\"+year+\" \"+hours+\":\"+minutes\r\n    }\r\n    function handleNewComment(e){\r\n        e.preventDefault();\r\n        const newComment = new CommentModel(new Date(),comment,activeUser);\r\n        onNewCommentCreate(newComment, index);\r\n    }\r\n    function handleReadMessage(){\r\n        setReadBy(true);\r\n        onReadMessage(index);\r\n    }\r\n    return (\r\n        <Card className=\"c-message\">\r\n            <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey={index} onClick={handleReadMessage}>\r\n                    <Row>\r\n                        <Col md={1}>\r\n                            {readBy ? <IoIosMailOpen/>: <IoIosMailUnread/> }\r\n                        </Col>\r\n                        <Col>\r\n                            <h5>{message.title}</h5>\r\n                        </Col>\r\n                    </Row>\r\n                </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey={index}>\r\n                <Row className=\"c-message-info\">\r\n                    {message.img ? \r\n                    <Col md={2} className=\"c-message-img\">\r\n                        <Card.Img variant=\"top\" src={message.img} />\r\n                    </Col>\r\n                    :null}\r\n                    <Col md={4}>\r\n                        <Card.Body className=\"c-message-details\">\r\n                            <Card.Title>{message.title}</Card.Title>\r\n                            <Card.Text>{message.details}</Card.Text>\r\n                            <Card.Text>Priority: {message.priority}</Card.Text>\r\n                        </Card.Body>\r\n                    </Col>\r\n                    <Col md={4} className=\"c-message-comments\"> \r\n                        <h5>Comments:</h5>                    \r\n                        {commentsCards && commentsCards.length>0 ? commentsCards: null}\r\n                        <Form  onSubmit={handleNewComment}>\r\n                            <div className=\"c-comment-input\">\r\n                                <Form.Control placeholder=\"Comment\" rows={2} \r\n                                        value={comment} onChange={e=>setComment(e.target.value)}/>\r\n                                <Button className=\"c-comment-submit\"onClick={handleNewComment}><FaArrowCircleRight/></Button>            \r\n                            </div>\r\n                        </Form>\r\n                    </Col>\r\n                    {activeUser.role===1 ?\r\n                        <div className=\"c-message-button\">\r\n                            <ButtonGroup className=\"mr-2\" aria-label=\"Basic example\">\r\n                                <Button onClick={()=>onUpdateMessage(index)}>Update</Button>\r\n                                <Button onClick={()=>onDeleteMessage(index)} variant=\"danger\">Delete</Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    :null }\r\n                </Row>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Image, Modal, Row } from 'react-bootstrap'\r\n\r\nexport default function NewMessageModal({show, onClose,onCreate, message, onUpdate}) {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [priority, setPriority] = useState(\"Info\");\r\n    const [img, setImg] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(message){\r\n            setTitle(message.title);\r\n            setDetails(message.details);\r\n            setPriority(message.priority);\r\n            setImg(message.img);\r\n        }\r\n    }, [message])\r\n    function handleFileChange(e){\r\n        if (e.target.files.length === 1) {\r\n            setImg(e.target.files[0]);\r\n        } else {\r\n            setImg(null);\r\n        }\r\n    }\r\n\r\n    function onMessageClose(){\r\n        clearForm();\r\n        onClose();\r\n    }\r\n    function clearForm(){\r\n        setTitle(\"\");\r\n        setDetails(\"\");\r\n        setPriority(\"\");\r\n        setImg(null);\r\n    }\r\n    function createMessage(){\r\n        if(message){\r\n            onUpdate(title,details,priority,img);\r\n        } else{    \r\n            onCreate(title,details,priority,img);\r\n        }\r\n        onMessageClose();\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={onMessageClose} className=\"c-new-tenant\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title className=\"text-center\">{message ? \"Update Message\" :\"New Message\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>   \r\n                <Form className=\"c-message-form\">\r\n                    <Form.Group as={Row} >\r\n                        <Form.Label column sm={4}>\r\n                            Message Title\r\n                        </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control value={title} placeholder=\"Title\" onChange={e => setTitle(e.target.value)}/>                        \r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formBasicDetail\">\r\n                        <Form.Label column sm={4}>Details: </Form.Label>\r\n                        <Col>\r\n                            <Form.Control sm={8} as=\"textarea\" placeholder=\"Details\" rows={3} \r\n                                value={details} onChange={e => setDetails(e.target.value)} />\r\n                        </Col>\r\n                    </Form.Group>                    \r\n                    <Form.Group as={Row} controlId=\"formBasicPriority\">\r\n                        <Form.Label column sm={4}>Priority: </Form.Label>\r\n                        <Col  sm={8}>\r\n                            <Form.Control as=\"select\" placeholder=\"Priority\" value={priority} onChange={e => setPriority(e.target.value)}>\r\n                                <option>Info</option>\r\n                                <option>Important</option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Group>  \r\n                    <Form.Group as={Row} controlId=\"formHorizontalImg\">\r\n                        <Form.Label column sm={4}>Message Image:</Form.Label>\r\n                        <Col>\r\n                            <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange}/>                        \r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Image src={img ? typeof img === 'object' ? URL.createObjectURL(img) : img : \"\" }/>\r\n                </Form>           \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onMessageClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={createMessage}>\r\n                    {message ? \"Update Message\" : \"Create Message\"}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Accordion, Alert, Button, Container, Spinner } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport DeleteModalComponent from '../../components/DeleteModalComponent/DeleteModalComponent';\r\nimport MessageCardComponent from '../../components/MessageCardComponent/MessageCardComponent';\r\nimport NewMessageModal from '../../components/NewMessageModal/NewMessageModal';\r\nimport PageHeaderComponent from '../../components/PageHeaderComponent/PageHeaderComponent';\r\nimport CommunityModel from '../../models/CommunityModel';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\nimport './MessagesPage.css';\r\n\r\nexport default function MessagesPage() {\r\n    const activeUser = useContext(ActiveUserContext)\r\n    const [show, setShow] = useState(false);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n\r\n    const [addingMessageError, setAddingMessageError] = useState(false)\r\n    const [newCommentError, setNewCommentError] = useState(false);\r\n    const [updateMessageError , setUpdateMessageError] = useState(false);\r\n    const [deleteMessageError , setDeletMessageError] = useState(false);\r\n    const [messages, setMessages] = useState(null);\r\n    const [filterText,setFilterText] = useState(\"\");\r\n    const [filterPriority, setFilterPriority] = useState(\"\");\r\n    const [sortBy, setSortBy] = useState(\"\");\r\n    const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function getAllMessages(){  \r\n            const communityMessages = await BackendDataService.getAllCommunityMessages(activeUser.community);\r\n            setMessages(communityMessages);     \r\n        }   \r\n        if (activeUser){\r\n            getAllMessages();\r\n           \r\n        }\r\n    }, [activeUser]);\r\n\r\n    if(!activeUser){\r\n        return <Redirect to =\"/\"/>\r\n    }\r\n    let loading=true\r\n    const filterSelection= [\"filter by priority:\",\"Info\",\"Important\"]\r\n    const sortBySelection=[\"Date\",\"Priority\"];\r\n    const community = new CommunityModel(activeUser.community); \r\n    let filteredMessages=[];\r\n    let MessageCards=[];\r\n    if(messages && messages.length>0)\r\n    {\r\n        filteredMessages = filteredMessages.concat(messages);\r\n\r\n        if(filterText){\r\n            filteredMessages = filteredMessages.filter(message=> {\r\n                return  message.title.includes(filterText) ||\r\n                        message.details.includes(filterText);\r\n            });\r\n        }\r\n        if(filterPriority && filterPriority!==\"filter by priority:\"){\r\n            filteredMessages = filteredMessages.filter(message=>message.priority===filterPriority)\r\n        }\r\n        if(sortBy){\r\n            filteredMessages.sort(function(a,b){\r\n                switch (sortBy){\r\n                    case \"Date\":\r\n                        return b.creatDate>a.createDate;\r\n                    case \"Priority\":\r\n                        return a.priority > b.priority;\r\n                    default:\r\n                        return -1;\r\n                }\r\n            })\r\n        }\r\n        MessageCards = filteredMessages.map((message, index) =>{\r\n            return <MessageCardComponent key={index} message={message} \r\n                                        index={index.toString()} \r\n                                        activeUser = {activeUser}\r\n                                        onUpdateMessage={onUpdateMessage} \r\n                                        onDeleteMessage={onDeleteMessage} \r\n                                        onNewCommentCreate={handleNewComment}\r\n                                        onReadMessage={handleReadMessage}/>           \r\n        });\r\n        loading=false;\r\n    }else{\r\n        loading= false;\r\n    }\r\n\r\n    function onClose(){\r\n        setShow(false);\r\n        setShowDelete(false);\r\n    }\r\n    function onUpdateMessage(index){\r\n        const currentMessage = filteredMessages[index];\r\n        setSelectedMessage(currentMessage);\r\n        setShow(true)\r\n    }\r\n    function onDeleteMessage(index){\r\n        const currentMessage = filteredMessages[index];\r\n        setSelectedMessage(currentMessage);\r\n        setShowDelete(true)\r\n\r\n    }\r\n    async function handleNewMessage(title,details,priority,img){\r\n        try{\r\n            const newMessage = await BackendDataService.addNewMessage(title,details,priority,img);\r\n            setMessages(messages.concat(newMessage));\r\n            setAddingMessageError(false);\r\n        } catch(e){\r\n            console.error(e);\r\n            setAddingMessageError(true);\r\n        }\r\n        setShow(false);\r\n    }\r\n    async function handleNewComment(comment, index){\r\n        try{\r\n            const currentMessage = filteredMessages[index];\r\n            const newMessage = await BackendDataService.addNewComment(currentMessage, comment);\r\n            const messageIndex = messages.findIndex(x=>x.id === currentMessage.id);\r\n            let tempMessageArr = [];\r\n            messages.splice(messageIndex,1, newMessage);\r\n            tempMessageArr = tempMessageArr.concat(messages);\r\n            setMessages(tempMessageArr);\r\n            setNewCommentError(false);\r\n        }catch(error){\r\n            console.error(error);\r\n            setNewCommentError(true);\r\n        }\r\n    }\r\n    async function handleUpdateMessage(title,details,priority,img){\r\n        if(title!==selectedMessage.title || \r\n            details!==selectedMessage.details || \r\n            priority!==selectedMessage.priority || \r\n            img!==selectedMessage.img){\r\n            try{     \r\n                const newMessage = await BackendDataService.updateMessage(selectedMessage, title,details,priority,img);\r\n                const messageIndex = messages.findIndex(x=>x.id === selectedMessage.id);\r\n                let tempMessageArr = [];\r\n                messages.splice(messageIndex,1, newMessage);\r\n                tempMessageArr = tempMessageArr.concat(messages);\r\n                setMessages(tempMessageArr);\r\n                setUpdateMessageError(false);\r\n            }              \r\n            catch(e){\r\n                console.log(e);\r\n                setUpdateMessageError(true);\r\n            }\r\n        }\r\n        setShow(false);\r\n        setSelectedMessage(\"\");\r\n    }\r\n    async function handleDeleteMessage(){\r\n        try{\r\n            BackendDataService.deleteMessage(selectedMessage);\r\n            const tempArr = messages.filter(message=>message.id!==selectedMessage.id);\r\n            setMessages(tempArr);\r\n            setDeletMessageError(false);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            setDeletMessageError(true);\r\n        }\r\n        setShowDelete(false)\r\n        setSelectedMessage(\"\");\r\n    }\r\n    async function handleReadMessage(index){\r\n        const currentMessage = filteredMessages[index];\r\n        const newMessage = await BackendDataService.addUserReadMessage(currentMessage, activeUser.id);\r\n        const messageIndex = messages.findIndex(x=>x.id === currentMessage.id);\r\n        let tempMessageArr = [];\r\n        messages.splice(messageIndex,1, newMessage);\r\n        tempMessageArr = tempMessageArr.concat(messages);\r\n        setMessages(tempMessageArr);\r\n    }\r\n    return (\r\n        <Container className=\"p-messages\">\r\n            <h2>Messages for building: {community? community.name:\"\"}  </h2>\r\n            <PageHeaderComponent placeholder=\"Filter by Text in Title or Details\"\r\n                                filterSelection={filterSelection}\r\n                                sortBy={sortBySelection} \r\n                                onSortChange={(data)=>setSortBy(data)}\r\n                                onFilterChange={(data)=>setFilterText(data)}\r\n                                onFilterSelectChange={(data)=> setFilterPriority(data)}\r\n                                action= {activeUser.role===1 ? \"New Message\" :\"\"}\r\n                                showModal={()=>setShow(true)}/>\r\n            {addingMessageError? <Alert variant=\"danger\">Error in adding new Message. Please try again.</Alert> : null}\r\n            {newCommentError? <Alert variant=\"danger\">Error in adding new comment. Please try again.</Alert> : null}\r\n            {updateMessageError? <Alert variant=\"danger\">Error in updating the selected message. Please try again.</Alert> :null}\r\n            {deleteMessageError? <Alert variant=\"danger\">Error in deleting the selected message. Please try again.</Alert> :null}\r\n            {loading? \r\n                <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                    />\r\n                    <span className=\"sr-only\">Signing...</span>\r\n                </Button>\r\n                :<Accordion>\r\n                    {MessageCards && MessageCards.length>0 ? MessageCards :null }\r\n                </Accordion>\r\n            }\r\n            <NewMessageModal show={show}\r\n                            onClose={onClose}\r\n                            onCreate={handleNewMessage}\r\n                            message={selectedMessage}\r\n                            onUpdate={handleUpdateMessage}/>\r\n            <DeleteModalComponent show={showDelete}\r\n                                onClose={onClose}\r\n                                title=\"Message\"\r\n                                name={selectedMessage? selectedMessage.title:null}\r\n                                onDelete={handleDeleteMessage}/>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function NotFoundPage() {\r\n    return (\r\n        <Container>\r\n            <img src=\"https://i.stack.imgur.com/6M513.png\" style={{\"width\":\"100%\"}} alt=\"Not Found\"></img>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Alert, Button, Form, Col, Container, Row, Image, Spinner } from 'react-bootstrap';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nimport './SignupPage.css';\r\nimport { Redirect } from 'react-router';\r\nimport {IoIosCreate} from 'react-icons/io';\r\nexport default function SignupPage({onLogin}) {\r\n    const [showSignupError, setShowSignupError] = useState(false);\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [img, setImg] = useState(null);\r\n    const [community, setCommunity] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [apt, setApt] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [signingUp, setSigningUp] = useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    async function signup(e) {\r\n        e.preventDefault();\r\n        setSigningUp(true);\r\n        let activeUser = null;\r\n        if(fullName && email && pwd && community && address && city){ \r\n            setShowSignupError(false);\r\n            try {\r\n                activeUser = await BackendDataService.signup(fullName, email, pwd,community, address,apt, city, img);\r\n                onLogin(activeUser);\r\n                setShowInvalidLogin(false);\r\n                setSigningUp(false);\r\n            } catch (error) {\r\n                console.error('Error while logging in user', error);\r\n                setShowInvalidLogin(true);\r\n                setSigningUp(false);\r\n            }\r\n        }\r\n        else{\r\n            setShowSignupError(true);\r\n            setSigningUp(false);\r\n        }\r\n    }\r\n\r\n    function handleFileChange(e) {\r\n        if (e.target.files.length === 1) {\r\n            setImg(e.target.files[0]);\r\n        } else {\r\n            setImg(null);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"p-signup\">\r\n\r\n            <Container fluid className=\"p-signup-form col-md-7 col-sm-3\">\r\n                <h4>Create a Committee Member Account</h4>\r\n                <p>Please fill in all the follwoing details:</p>\r\n                {showSignupError ? <Alert variant=\"danger\">Missing information! Fill in all details.</Alert> : null}\r\n                {showInvalidLogin ? <Alert variant=\"danger\">Error in Sign Up!</Alert> : null}\r\n                {signingUp ?\r\n                <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                    />\r\n                    <span className=\"sr-only\">Signing...</span>\r\n                </Button>\r\n                : <Form onSubmit={signup}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                        <Form.Label>Enter name: </Form.Label>                       \r\n                        <Form.Control type=\"text\" value={fullName} \r\n                                    placeholder=\"Full Name\" onChange={e => setFullName(e.target.value)}/>                        \r\n                    </Form.Group>              \r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address: </Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" \r\n                            value={email} onChange={e => setEmail(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password: </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" \r\n                            value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicBuilding\">\r\n                        <Form.Label>Building/Conmmunity Name</Form.Label>\r\n                        <Form.Control type=\"text\" value={community} onChange={e => setCommunity(e.target.value)} placeholder=\"Building/Community name\" />\r\n                    </Form.Group> \r\n                    <Row className=\"mb-3\">\r\n                        <Col sm={6}>\r\n                                <Form.Label>Address: </Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Address\"  value={address} onChange={e => setAddress(e.target.value)} />\r\n                        </Col>\r\n                        <Col  sm={6}>\r\n                                <Form.Label>Apartment: </Form.Label>\r\n                                <Form.Control type=\"number\" placeholder=\"Apartment\"  value={apt} onChange={e => setApt(e.target.value)} />\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicCity\">\r\n                        <Form.Label>City: </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"City\"  value={city} onChange={e => setCity(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formHorizontalImg\">\r\n                        <Form.Label>Tenant Image:</Form.Label>\r\n                        <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange}/>                        \r\n                    </Form.Group>\r\n                    <Image src={img ? URL.createObjectURL(img) : \"\"}/> \r\n                    <Button className=\"mb-3\" variant=\"success\" type=\"submit\" block>\r\n                        Signup<IoIosCreate/>\r\n                    </Button>\r\n                </Form>}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Accordion, Button, Card, Col, Form, ListGroup, Row } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport './VotingCardComponent.css';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\n\r\nexport default function VotingCardComponent({voting, index, communityUsers,onUpdateDate, onUserVote, disable }) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [optionChose, setOptionChose] = useState(\"\");\r\n\r\n    const bgColor = ['rgba(255, 99, 132, 0.2)',\r\n    'rgba(54, 162, 235, 0.2)',    \r\n    'rgba(255, 206, 86, 0.2)',    \r\n    'rgba(75, 192, 192, 0.2)',\r\n    'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)',];\r\n    const bColor = ['rgba(255, 99, 132, 1)',\r\n    'rgba(54, 162, 235, 1)',\r\n    'rgba(255, 206, 86, 1)',\r\n    'rgba(75, 192, 192, 1)',\r\n    'rgba(153, 102, 255, 1)',\r\n    'rgba(255, 159, 64, 1)',];                      \r\n     let votingDueDate = getTime(voting.dueDate);\r\n     let optionsList=[];\r\n     let optionsRadio=\"\";\r\n     let userVoting=\"\";\r\n     let data = null;\r\n    function getTime(time){\r\n        let date = (\"0\" + time.getDate()).slice(-2);\r\n        // current month\r\n        let month = (\"0\" + (time.getMonth() + 1)).slice(-2);\r\n        // current year\r\n        let year = time.getFullYear();\r\n        return month+\"/\"+date+\"/\"+year;\r\n    }\r\n    if(voting.votes&& voting.votes.length>0){\r\n        for (const voteOption of voting.options){\r\n            if(voting.votes&& voting.votes.length>0){\r\n                const optionVotes = voting.votes.filter(x=>x.vote===voteOption);\r\n                optionsList= [...optionsList,{\"option\": voteOption, count: optionVotes.length}];\r\n            }\r\n        }\r\n        const userVote = voting.votes.find(x=>x.user.id===activeUser.id)\r\n        if(userVote){\r\n            userVoting= userVote.vote; \r\n        }\r\n        const tempadd = optionsList.map(x=>x.count);\r\n        const voterCount = tempadd.reduce((a, b) => a+b);\r\n        if (communityUsers.length - voterCount > 0){\r\n            optionsList = [...optionsList, {option:\"not voted yet\", count: (communityUsers.length - voterCount)}];\r\n        }\r\n        data = {\r\n            labels: optionsList.map(x=>x.option),\r\n            datasets: [\r\n                {\r\n                    label: '# of Votes',\r\n                    data: optionsList.map(x=>x.count),\r\n                    backgroundColor: bgColor.slice(0,optionsList.length),\r\n                    borderColor: bColor.slice(0,optionsList.length),\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        };\r\n    }\r\n    \r\n    if(voting.votes && voting.votes.length>0 ){\r\n             \r\n    }\r\n    \r\n    optionsRadio = voting.options.map(option=>{\r\n        return <Form.Check name=\"option\"\r\n        type=\"radio\" \r\n        label={option}\r\n        value={option} \r\n        onChange={(e)=>setOptionChose(e.target.value)}/> \r\n    })\r\n    \r\n    function onVoteChose(){\r\n        onUserVote(index, optionChose);\r\n    }\r\n    return (\r\n        <Card className=\"c-voting\">\r\n            <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey={index}>\r\n                    <h5>{voting.title}</h5>\r\n                </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey={index}>\r\n                <div className=\"p-voting-info\">\r\n                    <Card.Body className=\"p-voting-card\">      \r\n                        <Row>                    \r\n                            <Col md={2} sm={3}>\r\n                                <h6>Details:</h6>\r\n                            </Col>\r\n                            <Col md={7} sm={9}>\r\n                                <Card.Text>{voting.details}</Card.Text>\r\n                            </Col>                     \r\n                        </Row>                         \r\n                        <Row>\r\n                            <Col md={2} sm={3}>\r\n                                <h6>Options:</h6>\r\n                            </Col>                               \r\n                            <Col md={4} sm={4}>\r\n                                <Form>\r\n                                    {optionsRadio}\r\n                                </Form>\r\n                            </Col>\r\n                            <Col md={4} sm={5}>\r\n                                {!disable ? <Button onClick={onVoteChose}>Vote</Button>:null}\r\n                                { userVoting? <Card.Text>You Chose: {userVoting}</Card.Text>:null}\r\n                            </Col>\r\n                            \r\n                        </Row>                       \r\n                        <Row>\r\n                            <Col md={2} sm={3}>\r\n                                <h6>End Date:</h6>\r\n                            </Col>\r\n                            <Col md={4} sm={4}>\r\n                                <Card.Text>{votingDueDate}</Card.Text>\r\n                            </Col>\r\n                            <Col md={4} sm={5}>\r\n                                {activeUser.role===1 && !disable ? <Button onClick={()=>onUpdateDate(index)}>Update End Date</Button>:null}\r\n                            </Col>\r\n                        </Row> \r\n                        \r\n                        {data ? <Col md={6} sm={9}>\r\n                                    <Pie data={data} /> \r\n                                </Col> \r\n                        :null}\r\n                    </Card.Body>\r\n                </div>\r\n                    \r\n            </Accordion.Collapse>\r\n        </Card>      \r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\r\nimport { TiPlus } from 'react-icons/ti';\r\n\r\nexport default function NewVotingModal({show, onClose, onCreate ,voting, onUpdate}) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [details, setDetails] = useState(\"\")\r\n    const [options, setOptions] = useState([]);\r\n    const [dueDate, setDueDate] = useState(null);\r\n    const [inputList, setInputList] = useState([{option:\"\"}]);\r\n\r\n    function onVotingClose(){\r\n        clearForm();\r\n        onClose();\r\n    }\r\n    function clearForm(){\r\n        setTitle(\"\");\r\n        setDetails(\"\");\r\n        setOptions([]);\r\n        setDueDate(null);\r\n    }\r\n    function handleInputChange(data,index){\r\n        const list=[...inputList];\r\n        list[index].option = data;\r\n        setInputList(list);\r\n        setOptions(list.map(x=>x.option));\r\n\r\n    }\r\n    function handleAddClick(){\r\n        setInputList([...inputList, { option: \"\"}]);\r\n    }\r\n    function handleRemoveClick(index){\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    }\r\n    function createVoting(){  \r\n        if(voting && dueDate){\r\n            onUpdate(new Date(dueDate));\r\n        }else if(!voting && dueDate && title && options){\r\n            onCreate(title, details, options, new Date(dueDate));\r\n        }\r\n        clearForm();\r\n        onClose();\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={onVotingClose} className=\"c-new-voting\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title className=\"text-center\">{voting ? \"Update Voting\" :\"New Voting\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form className=\"c-voting-form\">\r\n                    { !voting ? \r\n                    <div>\r\n                        <Form.Group as={Row} controlId=\"formBasicTitle\">\r\n                            <Form.Label column sm={3}>\r\n                                Title\r\n                            </Form.Label>\r\n                            <Col sm={9}>\r\n                                <Form.Control value={title} placeholder=\"Title\" onChange={e => setTitle(e.target.value)}/>                        \r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formBasicDetails\">\r\n                            <Form.Label column sm={3}>Details </Form.Label>\r\n                            <Col>\r\n                                <Form.Control sm={9} as=\"textarea\" placeholder=\"Details\" \r\n                                    value={details} onChange={e => setDetails(e.target.value)} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formBasicOptions\">\r\n                                <Form.Label column sm={3}>Options: </Form.Label>\r\n                                <Col  sm={9}>\r\n                                    { inputList.map((x,i)=>{\r\n                                        return(\r\n                                            <div>\r\n                                                <Form.Control name=\"option\" value={x.option} \r\n                                                onChange={e=>handleInputChange(e.target.value,i)}/>\r\n                                                {inputList.length !== 1 && <Button variant=\"outline-danger\"  onClick={() => handleRemoveClick(i)}>Remove</Button>}\r\n                                                {inputList.length - 1 === i && <Button variant=\"outline-primary\" onClick={handleAddClick}><TiPlus/>Add</Button>}\r\n                                            </div>\r\n                                        );\r\n                                        })}                           \r\n                                </Col>\r\n                        </Form.Group>\r\n                    </div> : null}\r\n                    <Form.Group as={Row} controlId=\"formBasicEndDate\">\r\n                        <Form.Label column sm={4}>End Date: </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control  type=\"date\" value={dueDate} onChange={e => setDueDate(e.target.value)} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onVotingClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={createVoting}>\r\n                    {voting ? \"Update Voting\" : \"Create Voting\"}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Accordion, Button, Container, Spinner } from 'react-bootstrap';\r\nimport './VotingPage.css';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\nimport { Redirect } from 'react-router';\r\nimport VotingCardComponent from '../../components/VotingCardComponent/VotingCardComponent';\r\nimport PageHeaderComponent from '../../components/PageHeaderComponent/PageHeaderComponent';\r\nimport NewVotingModal from '../../components/NewVotingModal/NewVotingModal';\r\nimport { Alert } from 'bootstrap';\r\n\r\nexport default function VotingPage() {\r\n    const [votings,setVotings] = useState(null);\r\n    const [communityUsers, setCommunityUsers] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    const [addingVotingError, setAddingVotingError] = useState(false);\r\n    const [changeDateError, setChangeDateError] = useState(false);\r\n    const [selectedVoting, setSelectedVoting] = useState(\"\")\r\n    const [buildingName, setBuildingName] =useState(\"\");\r\n    const activeUser = useContext(ActiveUserContext);\r\n    useEffect(() => {\r\n        async function getAllVoting(){\r\n            const communityVoting = await BackendDataService.getAllCommunityVoting(activeUser.community);\r\n            const users = await BackendDataService.getCommunityUsers(activeUser.community);\r\n            const getBuildingName = await BackendDataService.getCommunityName(activeUser.community);\r\n            setCommunityUsers(users);\r\n            setVotings(communityVoting); \r\n            setBuildingName(getBuildingName) ;   \r\n        }\r\n        if(activeUser){\r\n            getAllVoting()\r\n        }\r\n    }, [activeUser])\r\n\r\n    if(!activeUser){\r\n        return <Redirect to =\"/\"/>\r\n    }\r\n\r\n    let loading = true;\r\n    let activeVotings =[];\r\n    let notActiveVotings = [];\r\n    let activeVotingsCards = [];\r\n    let notActiveVotingsCards = [];\r\n    if (votings && votings.length>0){\r\n        activeVotings = votings.filter(voting=>voting.dueDate> new Date());\r\n        if(activeVotings.length>0){\r\n            activeVotingsCards = activeVotings.map((activeVoting,index) =>{\r\n                return <VotingCardComponent voting={activeVoting} \r\n                                            index={index.toString()} \r\n                                            communityUsers={communityUsers}\r\n                                            onUpdateDate={onUpdateDate}\r\n                                            onUserVote={handleUserVote}/>\r\n            })\r\n        }\r\n        notActiveVotings = votings.filter(voting=>voting.dueDate<=new Date());\r\n        if(notActiveVotings.length>0){\r\n            notActiveVotingsCards = notActiveVotings.map((notActiveVoting,index) =>{\r\n                return <VotingCardComponent voting={notActiveVoting} \r\n                                            index={index.toString()} \r\n                                            communityUsers={communityUsers}\r\n                                            disable={true}\r\n                                            />\r\n            })\r\n        }\r\n        loading = false;\r\n    }else{\r\n        loading=false;\r\n    }\r\n    function onClose(){\r\n        setShow(false);\r\n        setSelectedVoting(\"\");\r\n    }\r\n    async function handleNewVoting(title, details,options,dueDate){\r\n        try{\r\n            const newVoting = await BackendDataService.addVoting(title, details,options,dueDate, activeUser);\r\n            setVotings(votings.concat(newVoting));\r\n            setAddingVotingError(false);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            setAddingVotingError(true);\r\n        }\r\n     \r\n        setShow(false);\r\n    }\r\n    function onUpdateDate(index){\r\n        const voting = activeVotings[index];\r\n        setSelectedVoting(voting);\r\n        setShow(true)\r\n    }\r\n    async function handleDateChange(date){\r\n        if(date && typeof(date===\"date\")){\r\n            try{\r\n                const newVoting = await BackendDataService.changeVotingDate(selectedVoting, date);\r\n                let index = votings.findIndex(x=>x.id===selectedVoting.id);\r\n                let tempVotingArr = [];\r\n                votings.splice(index,1,newVoting);\r\n                tempVotingArr = tempVotingArr.concat(votings);\r\n                setVotings(tempVotingArr);\r\n                setChangeDateError(false);\r\n            }catch(e){\r\n                console.error(e);\r\n                setChangeDateError(true);\r\n            }\r\n        }\r\n        setShow(false)\r\n        setSelectedVoting(\"\");\r\n    }\r\n    async function handleUserVote(index, option){\r\n        if(option){\r\n            const voting = activeVotings[index];\r\n            if(voting.votes && voting.votes.length>0){\r\n                const userVote = voting.votes.find(x=>x.user.id===activeUser.id);\r\n                if(userVote&& userVote.vote===option){\r\n                    return;\r\n                }\r\n            }\r\n            try{            \r\n                const userVote ={\r\n                    user: activeUser,\r\n                    vote: option\r\n                }\r\n                const newVoting = await BackendDataService.addUserVoting(voting, userVote);\r\n                let votingIndex = votings.findIndex(x=>x.id===voting.id);\r\n                let tempVotingArr = [];\r\n                votings.splice(votingIndex,1,newVoting);\r\n                tempVotingArr = tempVotingArr.concat(votings);\r\n                setVotings(tempVotingArr);    \r\n            }catch(e){\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-voting\">\r\n            <h2>Voting for building: {buildingName}</h2>\r\n            <PageHeaderComponent action= {activeUser.role===1 ? \"New Voting\" :\"\"}\r\n                                showModal={()=>setShow(true)}/>\r\n            {addingVotingError? <Alert variant=\"danger\">Error in adding new voting. Please try again.</Alert>:null}                                \r\n            {changeDateError? <Alert variant=\"danger\">Error in changing the voting date. Please try again.</Alert>:null}\r\n            {loading ? \r\n                <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                    />\r\n                    <span className=\"sr-only\">Signing...</span>\r\n                </Button>\r\n                :\r\n                <div className=\"p-voting-info\">\r\n                    {activeVotingsCards.length>0 ? \r\n                        <div>\r\n                            <h3>Active Voting</h3>\r\n                            <Accordion>\r\n                                {activeVotingsCards}\r\n                            </Accordion>\r\n                        </div>\r\n                        :null}\r\n                    {notActiveVotingsCards.length>0 ?   \r\n                        <div>\r\n                            <h3>Voting Results</h3>\r\n                            <Accordion>\r\n                                {notActiveVotingsCards}\r\n                            </Accordion>\r\n                        </div>\r\n                        :null}\r\n                </div>}\r\n            \r\n            <NewVotingModal show={show}\r\n                            onClose={onClose}\r\n                            onCreate={handleNewVoting}\r\n                            voting={selectedVoting}\r\n                            onUpdate={handleDateChange}/>\r\n        </Container>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomeownerNavbar from './components/HomeownerNavbar/HomeownerNavbar';\nimport DashboardPage from './pages/DashboardPage/DashboardPage';\nimport Homepage from './pages/HomePage/HomePage';\nimport TenantsPage from './pages/TenantsPage/TenantsPage';\nimport MessagesPage from './pages/MessagesPage/MessagesPage';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport ActiveUserContext from './shared/ActiveUserContext'\nimport BackendDataService from './utils/BackendDataService';\nimport VotingPage from './pages/VotingPage/VotingPage';\n\nfunction App() {\n\n  const [activeUser, setActiveUser] = useState(BackendDataService.loadActiveUser());\n  \n  return (\n    <ActiveUserContext.Provider value={activeUser}>\n      <div className=\"App\">\n        <HashRouter>\n          <HomeownerNavbar onLogout={() => {setActiveUser(null); \n                                            localStorage.clear();\n                                          }}/>\n          <Switch>\n            <Route exact path=\"/\"><Homepage onLogin={user => setActiveUser(user)} /></Route>\n            <Route exact path=\"/tenants\"><TenantsPage/></Route>\n            <Route exact path=\"/signup\"><SignupPage onLogin={user => setActiveUser(user)}/></Route> \n            <Route exact path=\"/dashboard\"><DashboardPage/></Route>\n            <Route exact path=\"/messages\"><MessagesPage/></Route>\n            <Route exact path=\"/voting\"><VotingPage/></Route>\n            <Route path=\"/\"><NotFoundPage/></Route>          \n          </Switch>        \n        </HashRouter>\n      </div>\n    </ActiveUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Parse from 'parse'\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  '7DF9hNM7Lg0czEM0MSXeIyFeVLJjcQ6vLyHRylhg', // This is your Application ID\n  'bpB5hgraIysLbHEirYG55VLia5gcfaVZIt5aVkRg' // This is your Javascript key\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}