{"version":3,"sources":["shared/ActiveUserContext.js","components/HomeownerNavbar/HomeownerNavbar.js","pages/DashboardPage/DashboardPage.js","assets/background-image.jpg","assets/messages-icon.png","assets/tenants-icon.png","assets/voting-icon.png","assets/issues-icon.png","components/LandingPageCardComponent/LandingPageCardComponent.js","models/CommunityModel.js","models/UserModel.js","assets/person.png","models/MessageModel.js","utils/BackendDataService.js","pages/HomePage/HomePage.js","components/PageHeaderComponent/PageHeaderComponent.js","components/TenantCardComponent/TenantCardComponent.js","components/NewTenantModal/NewTenantModal.js","components/DeleteModalComponent/DeleteModalComponent.js","pages/TenantsPage/TenantsPage.js","models/CommentModel.js","components/MessageCardComponent/MessageCardComponent.js","components/NewMessageModal/NewMessageModal.js","pages/MessagesPage/MessagesPage.js","pages/NotFoundPage/NotFoundPage.js","pages/SignupPage/SignupPage.js","App.js","reportWebVitals.js","index.js"],"names":["ActiveUserContext","createContext","HomeownerNavbar","onLogout","activeUser","useContext","Container","Navbar","collapseOnSelect","fixed","bg","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","role","Link","eventKey","disabled","fullName","split","onClick","DashboardPage","to","LandingPageCardComponent","CardDeck","Card","Img","variant","src","tenant","Title","Text","message","votes","issues","CommunityModel","parseCommunity","this","name","get","street","city","UserModel","parseUser","userName","email","community","apartment","pwd","password","img","url","MessageModel","parseMessage","title","details","priority","comments","createdBy","createDate","readBy","a","Parse","User","logIn","console","error","address","apt","addNewCommunity","newCommunity","user","set","File","image","signUp","query","Query","equalTo","find","then","results","Object","destroyAll","CommunityTable","extend","save","communityItem","tenants","map","parseTenant","acl","ACL","setPublicWriteAccess","setPublicReadAccess","setACL","sessionToken","current","become","destroy","response","log","messages","Message","newMessage","comment","messageComments","length","concat","push","newParseMessage","userId","login","signup","getAllCommunityTenants","loadActiveUser","addTenant","updateTenant","deleteTenant","getAllCommunityMessages","addNewMessage","addNewComment","updateMessage","deleteMessage","addUserReadMessage","Homepage","onLogin","useState","showInvalidLogin","setShowInvalidLogin","setEmail","setPwd","e","preventDefault","BackendDataService","fluid","Alert","Form","onSubmit","Group","controlId","Control","type","placeholder","value","onChange","target","Button","block","alt","PageHeaderComponent","filterSelection","sortBy","onSortChange","onFilterChange","onFilterSelectChange","action","showModal","innerFilterSelection","innerSortBy","x","Check","inline","label","Row","Col","md","lg","as","custom","size","Label","TenantsCardComponent","index","onUpdateTenant","onDeleteTenant","Header","Accordion","Body","ButtonGroup","aria-label","NewTeneatModal","show","onClose","onCreate","onUpdate","setFullName","setApt","setImg","clearForm","onTenantClose","useEffect","Modal","onHide","closeButton","column","sm","accept","files","Image","URL","createObjectURL","Footer","DeleteModalComponent","onDelete","toLowerCase","TenantsPage","setTenants","selectedTenant","setSelectedTenant","filterText","setFilterText","setShow","showDelete","setShowDelete","addingTenantError","setAddingTenantError","updateTenantError","setUpdateTenantError","deleteTenantError","setDeletTenantError","communityTenants","getAllTenants","loading","filteredTenants","tenantsCards","currentTenant","newTenant","findIndex","tempTenantArr","splice","tempArr","filter","includes","toString","data","Spinner","animation","aria-hidden","CommentModel","time","text","MessageCardComponent","onUpdateMessage","onDeleteMessage","onNewCommentCreate","onReadMessage","setComment","setReadBy","commentsCards","handleNewComment","newComment","Date","commentTime","date","getDate","slice","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","getTime","style","display","fontSize","rows","NewMessageModal","setTitle","setDetails","setPriority","onMessageClose","MessagesPage","addingMessageError","setAddingMessageError","newCommentError","setNewCommentError","updateMessageError","setUpdateMessageError","deleteMessageError","setDeletMessageError","setMessages","filterPriority","setFilterPriority","setSortBy","selectedMessage","setSelectedMessage","communityMessages","getAllMessages","filteredMessages","MessageCards","currentMessage","messageIndex","tempMessageArr","handleReadMessage","sort","b","creatDate","NotFoundPage","SignupPage","showSignupError","setShowSignupError","setCommunity","setAddress","setCity","signingUp","setSigningUp","App","setActiveUser","Provider","localStorage","clear","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23d354bd.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;","import React, { useContext } from 'react'\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nimport './HomeownerNavbar.css'\r\nimport { BsBuilding } from 'react-icons/bs';\r\nimport { GiHand } from 'react-icons/gi'\r\nimport { IoIosPeople , IoIosLogOut, IoIosCreate} from 'react-icons/io'\r\nimport { SiGooglemessages } from 'react-icons/si'\r\nexport default function HomeownerNavbar({onLogout}) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    return (\r\n        <Container>\r\n            <Navbar collapseOnSelect fixed=\"top\" bg=\"light\" expand=\"lg\" className= \"c-homeowner-navbar\">\r\n                <Navbar.Brand href=\"#/\"><BsBuilding /></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {activeUser && activeUser.role === 1? <Nav.Link href=\"#/tenants\">Tenants<IoIosPeople /></Nav.Link> : null}\r\n                        {activeUser ? <Nav.Link href=\"#/messages\">Messages<SiGooglemessages/></Nav.Link> : null}\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        {!activeUser ? <Nav.Link href=\"#/signup\">Signup<IoIosCreate/></Nav.Link> : null}\r\n                        {activeUser ? <Nav.Link eventKey=\"disabled\" disabled>Welcome \r\n                            {` ${activeUser.fullName? activeUser.fullName.split(\" \")[0]:\"\"}`}<GiHand /> </Nav.Link> :null}\r\n                        {activeUser ? <Nav.Link href=\"#\" onClick={() => onLogout()}>Logout<IoIosLogOut/></Nav.Link> : null}\r\n\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>    \r\n        </Container>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nexport default function DashboardPage() {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if(!activeUser){\r\n       return <Redirect to='/'/>\r\n    }\r\n    return (\r\n        <div>\r\n            Dashboard\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background-image.eb8723f6.jpg\";","export default __webpack_public_path__ + \"static/media/messages-icon.eb9fecda.png\";","export default __webpack_public_path__ + \"static/media/tenants-icon.64b5bfa4.png\";","export default __webpack_public_path__ + \"static/media/voting-icon.14692da9.png\";","export default __webpack_public_path__ + \"static/media/issues-icon.55281240.png\";","import React from 'react'\r\nimport { Card, CardDeck } from 'react-bootstrap'\r\nimport message from '../../assets/messages-icon.png';\r\nimport tenant from '../../assets/tenants-icon.png'\r\nimport votes from '../../assets/voting-icon.png'\r\nimport issues from '../../assets/issues-icon.png'\r\n\r\nexport default function LandingPageCardComponent() {\r\n    return (\r\n        <CardDeck>\r\n           <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={tenant}/>\r\n                <Card.Title>Managing building members</Card.Title>\r\n                <Card.Text>You as a committee owner can add or remove tenants from the building account.</Card.Text>\r\n            </Card>\r\n            <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={message}/>\r\n                <Card.Title>Manage messages system</Card.Title>\r\n                <Card.Text>You as a committee owner can post messages to all building tenants. \r\n                    Also can delete/update posted message if needed. A tenant can view, filter and search messages.</Card.Text>\r\n            </Card>\r\n            <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={votes}/>\r\n                <Card.Title>Manage voting system</Card.Title>\r\n                <Card.Text>You as a committee owner can create a new voting, \r\n                    updating the information of the vote and observe the voting on-going progress. \r\n                    A building member can view all active voting and participate in desicion.</Card.Text>\r\n            </Card>\r\n            <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={issues}/>\r\n                <Card.Title>Manage building issues</Card.Title>\r\n                <Card.Text>You as a building member can report issues with priority, have the ability to view and update/delete/close the issue created by you.\r\n                    As a committee member you can view all issues and comment then if needed.</Card.Text>\r\n            </Card>\r\n\r\n            \r\n        </CardDeck>\r\n    )\r\n}\r\n","export default class CommunityModel{\r\n    constructor(parseCommunity){\r\n        this.id = parseCommunity.id;\r\n        this.name = parseCommunity.get(\"name\");\r\n        this.street = parseCommunity.get(\"street\");\r\n        this.city = parseCommunity.get(\"city\");\r\n        this.parseCommunity = parseCommunity;\r\n    }\r\n}","export default class UserModel {\r\n    #parseUser\r\n    //role =1 community member role = 2 tenant\r\n    constructor(parseUser){\r\n        this.id = parseUser.id;\r\n        this.fullName = parseUser.get(\"fullName\");\r\n        this.userName = parseUser.get(\"username\");\r\n        this.email = parseUser.get(\"username\");\r\n        this.role = parseUser.get(\"role\");\r\n        this.community = parseUser.get(\"community\");\r\n        this.apartment = parseUser.get(\"apartment\");\r\n        this.pwd = parseUser.password;\r\n        if(parseUser.get(\"image\")){\r\n            this.img = parseUser.get(\"image\").url();\r\n        }\r\n        this.#parseUser = parseUser;\r\n\r\n    }\r\n    static activeUser = null;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/person.8aa599f8.png\";","export default class MessageModel{\r\n    constructor(parseMessage){\r\n        this.id = parseMessage.id;\r\n        this.title = parseMessage.get(\"title\");\r\n        this.details = parseMessage.get(\"details\");\r\n        this.priority = parseMessage.get(\"priority\");\r\n        this.community = parseMessage.get(\"community\");\r\n        if(parseMessage.get(\"comments\")){\r\n            this.comments = parseMessage.get(\"comments\");     \r\n        }\r\n        this.createdBy = parseMessage.get(\"createdBy\");\r\n        if(parseMessage.get(\"image\")){\r\n            this.img = parseMessage.get(\"image\").url();\r\n        }\r\n        this.createDate = parseMessage.get(\"createdAt\");\r\n        this.readBy = parseMessage.get(\"readBy\");\r\n    }\r\n\r\n}\r\n\r\n","import Parse from 'parse';\r\nimport CommunityModel from '../models/CommunityModel';\r\nimport UserModel from '../models/UserModel';\r\nimport image from '../assets/person.png';\r\nimport MessageModel from '../models/MessageModel';\r\n\r\nasync function login(email, pwd){\r\n    if(email && pwd){\r\n        const parseUser = await Parse.User.logIn(email, pwd);\r\n        UserModel.activeUser = new UserModel(parseUser);\r\n    }\r\n    else{\r\n        UserModel.activeUser = null;\r\n        console.error(\"cannot login - missing credentials\")\r\n    }\r\n    return UserModel.activeUser;\r\n}\r\nfunction loadActiveUser(){\r\n    if(Parse.User.current()){\r\n        UserModel.activeUser = new UserModel(Parse.User.current());\r\n    }\r\n    else{\r\n        UserModel.activeUser =null;\r\n    }\r\n    return UserModel.activeUser;\r\n}\r\nasync function signup(fullName, email, pwd, community, address, apt, city, img) {  \r\n    const newCommunity = await addNewCommunity(community, address, city); \r\n\r\n    const user = new Parse.User()\r\n    user.set('username', email);\r\n    user.set('email', email);\r\n    user.set('fullName', fullName);\r\n    user.set('password', pwd);\r\n    user.set('apartment',apt);\r\n    if(img){\r\n        user.set('image',new Parse.File(img.name,img));\r\n    }\r\n    else{\r\n        user.set('image',{image});\r\n    }\r\n    user.set('role', 1)\r\n    user.set('community', newCommunity.parseCommunity);\r\n\r\n    try{\r\n        const parseUser = await user.signUp();\r\n        UserModel.activeUser = new UserModel(parseUser);\r\n        return UserModel.activeUser;\r\n    }\r\n    catch(e){\r\n        var query = new Parse.Query('Community');\r\n        query.equalTo('objectId', newCommunity.parseCommunity.id);\r\n        query.find().then(function(results) {\r\n            return Parse.Object.destroyAll(results);\r\n        });\r\n        throw(e);\r\n    }\r\n}\r\nasync function addNewCommunity(community, address, city){\r\n    const CommunityTable = Parse.Object.extend('Community');\r\n    const newCommunity = new CommunityTable();\r\n    newCommunity.set('name',community);\r\n    newCommunity.set('street',address);\r\n    newCommunity.set('city',city);\r\n    const parseCommunity = await newCommunity.save();\r\n    const communityItem = new CommunityModel(parseCommunity);\r\n    return communityItem;\r\n}\r\nasync function getAllCommunityTenants(community){\r\n    var query = new Parse.Query('User');\r\n    query.equalTo('community', community);\r\n    const results = await query.find();\r\n    const tenants = results.map(parseTenant => new UserModel(parseTenant));\r\n    return tenants;\r\n}\r\nasync function addTenant(fullName, email, pwd, community, apt, img){\r\n    const user = new Parse.User()\r\n    user.set('username', email);\r\n    user.set('email', email);\r\n    user.set('fullName', fullName);\r\n    user.set('password', pwd);\r\n    if(img){\r\n        user.set('image',new Parse.File(img.name,img));\r\n    }\r\n    user.set('apartment',apt);\r\n    user.set('role', 2)\r\n    user.set('community', community);\r\n    const acl = new Parse.ACL();\r\n    acl.setPublicWriteAccess(true);\r\n    acl.setPublicReadAccess(true);\r\n\r\n    user.setACL(acl);\r\n\r\n    const sessionToken = Parse.User.current().get(\"sessionToken\");\r\n    const parseUser = await user.signUp();\r\n    Parse.User.become(sessionToken);\r\n    return new UserModel(parseUser);\r\n}\r\nasync function updateTenant(tenant,fullName,email,apt,img){ \r\n    const sessionToken = Parse.User.current().get(\"sessionToken\");\r\n    const query = new Parse.Query('User');\r\n    const user = await query.get(tenant.id);\r\n    user.set('username', email? email:tenant.email);\r\n    user.set('email', email? email:tenant.email);\r\n    user.set('fullName', fullName? fullName : tenant.fullName);\r\n    user.set('apartment', apt? apt : tenant.apartment);\r\n    if(typeof img === 'object'){\r\n        user.set('image', new Parse.File(img.name,img));\r\n    }\r\n    const parseUser = await user.save();\r\n    Parse.User.become(sessionToken);\r\n    return new UserModel(parseUser); \r\n}\r\nasync function deleteTenant(tenant){\r\n    const query = new Parse.Query('User');\r\n    // Finds the user by its ID\r\n    const user = await query.get(tenant.id); \r\n        // Invokes the \"destroy\" method to delete the user\r\n    user.destroy().then((response) => {\r\n        console.log('Deleted user', response);\r\n        return new UserModel(response);\r\n    }, (error) => {\r\n        console.error('Error while deleting user', error);\r\n        throw(error);\r\n    });   \r\n}\r\nasync function getAllCommunityMessages(community){\r\n    const query = new Parse.Query('Message');\r\n    query.equalTo('community', community);\r\n    const results = await query.find();\r\n    const messages = results.map(parseMessage => new MessageModel(parseMessage));\r\n    return messages;\r\n}\r\nasync function addNewMessage(title,details,priority,img){\r\n    const Message = Parse.Object.extend('Message');\r\n    const newMessage = new Message();\r\n    \r\n    newMessage.set('createdBy', Parse.User.current());\r\n    newMessage.set('title', title);\r\n    newMessage.set('details', details);\r\n    newMessage.set('priority', priority);\r\n    if(img){\r\n        newMessage.set('image', new Parse.File(img.name, img));\r\n    }\r\n    newMessage.set('community', UserModel.activeUser.community);  \r\n    newMessage.set('readBy',[Parse.User.current().id]);\r\n  \r\n    const parseMessage = await newMessage.save();\r\n\r\n    return new MessageModel(parseMessage);\r\n}\r\nasync function addNewComment(message,comment){\r\n    const query = new Parse.Query('Message');\r\n    const parseMessage = await query.get(message.id);\r\n    let messageComments=[];\r\n    // here you put the objectId that you want to update\r\n    if(message.comments && message.comments.length>0){\r\n        messageComments = messageComments.concat(message.comments);\r\n        messageComments.push(comment);\r\n        //add\r\n    }else{\r\n        messageComments.push(comment);\r\n    }\r\n    parseMessage.set(\"comments\", messageComments);\r\n    \r\n    const newParseMessage = await parseMessage.save(); \r\n\r\n    return new MessageModel(newParseMessage);\r\n}\r\nasync function updateMessage(message, title, details, priority, img){\r\n    const query = new Parse.Query('Message');\r\n    const parseMessage = await query.get(message.id);\r\n    parseMessage.set('title', title);\r\n    parseMessage.set('details', details);\r\n    parseMessage.set('priority', priority);\r\n    if(typeof img === 'object'){\r\n        parseMessage.set('image', new Parse.File(img.name,img));\r\n    }   \r\n    const newParseMessage = await parseMessage.save();\r\n    return new MessageModel(newParseMessage);\r\n}\r\nasync function deleteMessage(message){\r\n    const query = new Parse.Query('Message');\r\n    // Finds the user by its ID\r\n    const parseMessage = await query.get(message.id); \r\n        // Invokes the \"destroy\" method to delete the user\r\n    parseMessage.destroy().then((response) => {\r\n        console.log('Deleted user', response);\r\n    }, (error) => {\r\n        console.error('Error while deleting user', error);\r\n        throw(error);\r\n    });   \r\n}\r\nasync function addUserReadMessage(message, userId){\r\n    const query = new Parse.Query('Message');\r\n    // Finds the user by its ID\r\n    const parseMessage = await query.get(message.id);\r\n    if(message && message.readBy){\r\n        parseMessage.set('readBy', message.readBy.concat(userId));\r\n    }else{\r\n        parseMessage.set('readBy', [userId]);\r\n    }   \r\n    const newParseMessage = await parseMessage.save();\r\n    return new MessageModel(newParseMessage);\r\n}\r\nexport default  {login,signup, getAllCommunityTenants, \r\n                loadActiveUser, addTenant, \r\n                updateTenant, deleteTenant, \r\n                getAllCommunityMessages, addNewMessage,\r\n                addNewComment,updateMessage,\r\n                deleteMessage, addUserReadMessage } ","import React, { useContext, useState } from 'react';\r\nimport \"./HomePage.css\";\r\nimport image from '../../assets/background-image.jpg';\r\nimport LandingPageCardComponent from '../../components/LandingPageCardComponent/LandingPageCardComponent';\r\nimport { Alert, Button, Container, Form } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\nimport { IoIosLogIn } from 'react-icons/io';\r\nexport default function Homepage({onLogin}) {\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    // if (activeUser) {\r\n    //     return <Redirect to=\"/dashboard\"/>\r\n    // }\r\n\r\n    async function login(e) {\r\n        e.preventDefault();\r\n        let activeUser = null;\r\n        try {\r\n            activeUser = await BackendDataService.login(email,pwd);\r\n            onLogin(activeUser);\r\n        } catch (error) {\r\n            console.error('Error while logging in user', error);\r\n            setShowInvalidLogin(true);\r\n        }\r\n    }\r\n    return (\r\n        <Container fluid className=\"p-home\">\r\n            <div className=\"p-home-header\">\r\n                <div className={!activeUser? `p-home-title col-sm-6 col-md-8`: `p-home-title col-12`}>\r\n                    <h1 className=\"display-4\">Homeowner Association Management System</h1>\r\n                    <h3>All you need to handle your building </h3>\r\n                </div>\r\n                {!activeUser ?\r\n                    <div className=\"p-login col-md-3\">\r\n                        <h4>Login to Your Building</h4>\r\n                        <p>or <Link to=\"/signup\">create a new committee</Link></p>\r\n                        {showInvalidLogin ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n                        <Form onSubmit={login} className=\"mb-3\">                      \r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email address\" \r\n                                    value={email} onChange={e => setEmail(e.target.value)} />\r\n                                <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" \r\n                                    value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Button  className=\"mb-3\" variant=\"primary\" type=\"submit\" block>\r\n                                Login <IoIosLogIn/>\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                :null }\r\n            </div>\r\n            <div className=\"p-home-bg-img\">\r\n                <img  className=\"p-home-img\" src={image} alt=\"Landing page img\"></img>\r\n            </div>\r\n            <div className=\"p-home-footer\">\r\n                <LandingPageCardComponent/>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport './PageHeaderComponent.css'\r\nexport default function PageHeaderComponent({placeholder,filterSelection,sortBy,onSortChange, onFilterChange, onFilterSelectChange, action, showModal}) {\r\n    let innerFilterSelection =\"\";\r\n    let innerSortBy =\"\";\r\n    \r\n    if (filterSelection){\r\n        innerFilterSelection = filterSelection.map(x=>{\r\n            return <option>{x}</option>\r\n        });\r\n    }\r\n    if (sortBy){\r\n        innerSortBy= sortBy.map(x=>{\r\n            return <Form.Check inline \r\n                        type=\"radio\" \r\n                        name=\"sorting\" \r\n                        label={x}\r\n                        value={x} \r\n                        onChange={(e)=>onSortChange(e.target.value)}/>   \r\n        });\r\n    }\r\n\r\n    return (     \r\n        <Form className=\"c-page-header\">\r\n            <Row>\r\n                <Col>               \r\n                    <Form.Control type=\"text\" placeholder={placeholder} onChange={(e)=>onFilterChange(e.target.value)}/>\r\n                </Col>\r\n                {filterSelection ? \r\n                    <Col md={3} lg={2}>\r\n                        <Form.Control as=\"select\" custom size=\"sm\" onChange = {(e)=>onFilterSelectChange(e.target.value)}>\r\n                            {innerFilterSelection}\r\n                        </Form.Control>\r\n                    </Col>\r\n                :null}\r\n                {innerSortBy? \r\n                    <Col className=\"c-header-sort\" md={5} lg={4}>\r\n                        <Form.Label>Sort by: </Form.Label>\r\n                        {innerSortBy}\r\n                    </Col>\r\n                :null}\r\n            </Row> \r\n            <Row>    \r\n                <Col className=\"c-b-end\">\r\n                    {action?\r\n                        <Button  variant=\"primary\" onClick={showModal}>\r\n                            {action}\r\n                        </Button>\r\n                    :null}\r\n                </Col>\r\n            </Row>         \r\n        </Form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Accordion, Button, ButtonGroup, Card } from 'react-bootstrap'\r\nimport './TenantCardComponent.css'\r\nexport default function TenantsCardComponent({tenant, index , onUpdateTenant, onDeleteTenant}) {\r\n    return (\r\n        <Card className=\"c-tenant\">\r\n            <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey={index}>\r\n                    <h5>{tenant.fullName}{tenant.role===1? \", Admin\":null}</h5>\r\n                </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey={index}>\r\n                <div className=\"c-tenant-info\">\r\n                    <div className=\"c-tenant-img\">\r\n                        <Card.Img variant=\"top\" src={tenant.img} />\r\n                    </div>\r\n                    <Card.Body>\r\n                        <Card.Title>Name: {tenant.fullName}</Card.Title>\r\n                        <Card.Text>Email: {tenant.email}</Card.Text>\r\n                        <Card.Text>Apt: {tenant.apartment}</Card.Text>\r\n                    </Card.Body>\r\n                    <div className=\"c-tenant-button\">\r\n                        <ButtonGroup className=\"mr-2\" aria-label=\"Basic example\">\r\n                            <Button onClick={()=>onUpdateTenant(index)}>Update</Button>\r\n                            {tenant.role!==1 ? <Button onClick={()=>onDeleteTenant(index)} variant=\"danger\">Delete</Button> :null}\r\n                        </ButtonGroup>\r\n                    </div>\r\n                </div>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Image, Modal, Row } from 'react-bootstrap'\r\nimport './NewTenantModal.css'\r\nexport default function NewTeneatModal({ show, onClose, onCreate , tenant, onUpdate}) {\r\n\r\n    const [fullName, setFullName] = useState(\"\" );\r\n    const [email, setEmail] = useState(\"\" );\r\n    const [apt, setApt] = useState(\"\" );\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [img, setImg] = useState(null);\r\n    useEffect(() => {\r\n        if(tenant){\r\n            setFullName(tenant.fullName);\r\n            setEmail(tenant.email);\r\n            setApt(tenant.apartment);\r\n            setImg(tenant.img);\r\n        }\r\n        \r\n    }, [tenant])\r\n\r\n    function createTenant(){\r\n        if(tenant){\r\n            onUpdate(fullName,email,apt,img);\r\n        }else{\r\n            onCreate(fullName,email,apt, pwd,img);\r\n        }\r\n        clearForm();\r\n        onClose();\r\n    }\r\n\r\n    function clearForm() {\r\n        setFullName(\"\");\r\n        setEmail(\"\");\r\n        setApt(\"\");\r\n        setPwd(\"\");\r\n        setImg(null);\r\n    }\r\n    function onTenantClose(){\r\n        clearForm();\r\n        onClose();\r\n    }\r\n    function handleFileChange(e){\r\n        if (e.target.files.length === 1) {\r\n            setImg(e.target.files[0]);\r\n        } else {\r\n            setImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={onTenantClose} className=\"c-new-tenant\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title className=\"text-center\">{tenant ? \"Update Tenant\" :\"New Tenant\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form className=\"c-tenant-form\">\r\n                    <Form.Group as={Row} >\r\n                        <Form.Label column sm={4}>\r\n                            Full Name\r\n                        </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control value={fullName} placeholder=\"First name\" onChange={e => setFullName(e.target.value)}/>                        \r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formBasicEmail\">\r\n                        <Form.Label column sm={4}>Email address: </Form.Label>\r\n                        <Col>\r\n                            <Form.Control sm={8} type=\"email\" placeholder=\"Email\" \r\n                                value={email} onChange={e => setEmail(e.target.value)} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    {!tenant ?\r\n                        <Form.Group as={Row} controlId=\"formBasicPassword\">\r\n                            <Form.Label column sm={4}>Password: </Form.Label>\r\n                            <Col  sm={8}>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" \r\n                                    value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        :null\r\n                    }\r\n                    <Form.Group as={Row} controlId=\"formBasicApt\">\r\n                        <Form.Label column sm={4}>Apartment: </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control  type=\"number\" placeholder=\"Apartment\"  value={apt} onChange={e => setApt(e.target.value)} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalImg\">\r\n                        <Form.Label column sm={4}>Tenant Image:</Form.Label>\r\n                        <Col>\r\n                            <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange}/>                        \r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Image src={img ? typeof img === 'object' ? URL.createObjectURL(img) : img : \"\" }/>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onTenantClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={createTenant}>\r\n                    {tenant ? \"Update Tenant\" : \"Create Tenant\"}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nexport default function DeleteModalComponent({show,onClose, title,name, onDelete}) {\r\n    return (\r\n        <Modal show={show} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Delete {title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Are you sure you want to delete selected {title.toLowerCase()}: {name}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={onClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={onDelete}>\r\n                    Delete {title}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Container, Accordion, Alert, Button, Spinner } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport PageHeaderComponent from '../../components/PageHeaderComponent/PageHeaderComponent';\r\nimport TenantsCardComponent from '../../components/TenantCardComponent/TenantCardComponent';\r\nimport NewTenantModal from '../../components/NewTenantModal/NewTenantModal'\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\nimport './TenantsPage.css';\r\nimport DeleteModalComponent from '../../components/DeleteModalComponent/DeleteModalComponent';\r\nimport CommunityModel from '../../models/CommunityModel';\r\n\r\nexport default function TenantsPage() {\r\n    const [tenants, setTenants] = useState([]);\r\n    const [selectedTenant, setSelectedTenant] = useState(\"\");\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [showDelete, setShowDelete] = useState(false)\r\n    const [addingTenantError, setAddingTenantError] = useState(false);\r\n    const [updateTenantError, setUpdateTenantError] = useState(false);\r\n    const [deleteTenantError, setDeletTenantError] = useState(false)\r\n    const activeUser = useContext(ActiveUserContext);\r\n    useEffect(() => {\r\n        async function getAllTenants(){  \r\n            const communityTenants = await BackendDataService.getAllCommunityTenants(activeUser.community);\r\n            setTenants(communityTenants);     \r\n        }   \r\n        if (activeUser){\r\n            getAllTenants();\r\n        }\r\n    }, [activeUser]);\r\n    \r\n    if(!activeUser || activeUser.role!==1){\r\n        return <Redirect to= '/' />\r\n    }\r\n    let loading = true;\r\n    let filteredTenants=[];\r\n    let tenantsCards=[];\r\n    let currentTenant=\"\";\r\n    const community = new CommunityModel(activeUser.community); \r\n    if(tenants && tenants.length>0)\r\n    {\r\n        if(filterText){\r\n            filteredTenants = tenants.filter(tenant=> {\r\n                return  tenant.fullName.includes(filterText) ||\r\n                        tenant.email.includes(filterText)||\r\n                        tenant.apartment.includes(filterText);\r\n            });\r\n        }\r\n        else{\r\n            filteredTenants = filteredTenants.concat(tenants);\r\n        }\r\n        tenantsCards = filteredTenants.map((tenant, index) =>{\r\n            return <TenantsCardComponent key={index} tenant={tenant} \r\n                                        index={index.toString()} \r\n                                        onUpdateTenant={onUpdateTenant} \r\n                                        onDeleteTenant={onDeleteTenant} />           \r\n        });\r\n        loading = false;\r\n    }\r\n    \r\n    function onClose(){\r\n        setShow(false);\r\n        setShowDelete(false)\r\n        setSelectedTenant(\"\");\r\n    }\r\n    function onUpdateTenant(index){\r\n        currentTenant = filteredTenants[index];\r\n        setSelectedTenant(currentTenant);\r\n        setShow(true)\r\n    }\r\n    function onDeleteTenant(index){\r\n        currentTenant = filteredTenants[index];\r\n        setSelectedTenant(currentTenant);\r\n        setShowDelete(true);\r\n    }   \r\n    async function handleNewTenant(fullName,email,apt, pwd, img){\r\n        try{\r\n            const tenant = await BackendDataService.addTenant(fullName, email, pwd, activeUser.community, apt, img);\r\n            setTenants(tenants.concat(tenant));\r\n            setAddingTenantError(false);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            setAddingTenantError(true);\r\n        }\r\n        setShow(false);\r\n    }\r\n    async function handleUpdateTenant(fullName, email, apt, img){\r\n        if(fullName!==selectedTenant.fullName || \r\n            email!==selectedTenant.email || \r\n            apt!==selectedTenant.apartment || \r\n            img!==selectedTenant.img){\r\n            try{     \r\n                const newTenant = await BackendDataService.updateTenant(selectedTenant, fullName, email, apt, img);\r\n                let index = tenants.findIndex(x=>x.id===selectedTenant.id);\r\n                let tempTenantArr = [];\r\n                tenants.splice(index,1,newTenant);\r\n                tempTenantArr = tempTenantArr.concat(tenants);\r\n                setTenants(tempTenantArr);\r\n                setUpdateTenantError(false);\r\n            }              \r\n            catch(e){\r\n                console.log(e);\r\n                setUpdateTenantError(true);\r\n            }\r\n        }\r\n        setShow(false);\r\n        setSelectedTenant(\"\");\r\n    }\r\n    async function handleDeleteTenant(){\r\n        try{\r\n            BackendDataService.deleteTenant(selectedTenant);\r\n            const tempArr = tenants.filter(tenant=>tenant.id!==selectedTenant.id);\r\n            setTenants(tempArr);\r\n            setDeletTenantError(false);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            setDeletTenantError(true);\r\n        }\r\n        setShowDelete(false)\r\n        setSelectedTenant(\"\");\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-tenant\">\r\n            <h2>Tenants for building: {community? community.name:\"\"}</h2>\r\n            <PageHeaderComponent placeholder=\"Filter by name/email/apartment:\" \r\n                                onFilterChange={(data)=>setFilterText(data)} \r\n                                action=\"Add Tenant\"\r\n                                showModal={()=>setShow(true)}/>\r\n            {addingTenantError? <Alert variant=\"danger\">Error in adding new tenant. Please try again.</Alert> : null}\r\n            {updateTenantError? <Alert variant=\"danger\">Error in updating a tenant. Please try again.</Alert> : null}\r\n            {deleteTenantError? <Alert variant=\"danger\">Error in deleting a tenant. Please try again.</Alert> : null}\r\n            {loading ? \r\n                <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                    />\r\n                    <span className=\"sr-only\">Signing...</span>\r\n                </Button>\r\n                : <Accordion>\r\n                    {tenantsCards.length> 0 ? tenantsCards :null}\r\n                </Accordion>\r\n            }\r\n            <NewTenantModal show={show} \r\n                            onClose={onClose}                   \r\n                            onCreate={handleNewTenant}\r\n                            tenant={selectedTenant} \r\n                            onUpdate={handleUpdateTenant}/>\r\n            <DeleteModalComponent show={showDelete}\r\n                                onClose={onClose}\r\n                                title=\"Tenant\"\r\n                                name={selectedTenant.fullName}\r\n                                onDelete={handleDeleteTenant}/>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","export default class CommentModel{\r\n    constructor(time,text,user){\r\n        this.time = time;\r\n        this.text = text;\r\n        this.user = user;\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Accordion, Button, ButtonGroup, Card, Col, Form, ListGroup, Row } from 'react-bootstrap'\r\nimport CommentModel from '../../models/CommentModel';\r\nimport './MessageCardComponent.css';\r\nimport { FaArrowCircleRight } from 'react-icons/fa';\r\nimport { IoIosMailOpen, IoIosMailUnread } from 'react-icons/io';\r\nexport default function MessageCardComponent({message, index, activeUser, onUpdateMessage, onDeleteMessage, onNewCommentCreate, onReadMessage}) {\r\n    const [comment,setComment] = useState(\"\");\r\n    const [readBy, setReadBy] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(message && message.readBy){\r\n            if(message.readBy.includes(activeUser.id)){\r\n                setReadBy(true);\r\n            }\r\n        }\r\n    }, [message])\r\n    let commentsCards=[]\r\n    if(message.comments && message.comments.length>0){      \r\n        commentsCards = message.comments.map(comment=>{\r\n            const commentTime = getTime(comment.time);\r\n        \r\n            return <Card className=\"c-comment\">\r\n                        <div>\r\n                            <Card.Img variant=\"top\" src={comment.user.img} />\r\n                        </div>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                {comment.user.fullName}:    \r\n                                <Card.Text style={{display: \"inline\", fontSize: \"1rem\"}}>\r\n                                {` ${commentTime}`}\r\n                                </Card.Text>  \r\n                            </Card.Title>\r\n                            <Card.Text>{comment.text}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n        })\r\n    }\r\n    function getTime(time){\r\n        let date = (\"0\" + time.getDate()).slice(-2);\r\n        // current month\r\n        let month = (\"0\" + (time.getMonth() + 1)).slice(-2);\r\n        // current year\r\n        let year = time.getFullYear();\r\n        // current hours\r\n        let hours = time.getHours();\r\n        // current minutes\r\n        let minutes = (\"0\" + time.getMinutes()).slice(-2); \r\n        return month+\"/\"+date+\"/\"+year+\" \"+hours+\":\"+minutes\r\n    }\r\n    function handleNewComment(e){\r\n        e.preventDefault();\r\n        const newComment = new CommentModel(new Date(),comment,activeUser);\r\n        onNewCommentCreate(newComment, index);\r\n    }\r\n    function handleReadMessage(){\r\n        setReadBy(true);\r\n        onReadMessage(index);\r\n    }\r\n    return (\r\n        <Card className=\"c-message\">\r\n            <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey={index} onClick={handleReadMessage}>\r\n                    <Row>\r\n                        <Col md={1}>\r\n                            {readBy ? <IoIosMailOpen/>: <IoIosMailUnread/> }\r\n                        </Col>\r\n                        <Col>\r\n                            <h5>{message.title}</h5>\r\n                        </Col>\r\n                    </Row>\r\n                </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey={index}>\r\n                <Row className=\"c-message-info\">\r\n                    {message.img ? \r\n                    <Col md={2} className=\"c-message-img\">\r\n                        <Card.Img variant=\"top\" src={message.img} />\r\n                    </Col>\r\n                    :null}\r\n                    <Col md={4}>\r\n                        <Card.Body className=\"c-message-details\">\r\n                            <Card.Title>{message.title}</Card.Title>\r\n                            <Card.Text>{message.details}</Card.Text>\r\n                            <Card.Text>Priority: {message.priority}</Card.Text>\r\n                        </Card.Body>\r\n                    </Col>\r\n                    <Col md={4} className=\"c-message-comments\"> \r\n                        <h5>Comments:</h5>                    \r\n                        {commentsCards && commentsCards.length>0 ? commentsCards: null}\r\n                        <Form  onSubmit={handleNewComment}>\r\n                            <div className=\"c-comment-input\">\r\n                                <Form.Control placeholder=\"Comment\" rows={2} \r\n                                        value={comment} onChange={e=>setComment(e.target.value)}/>\r\n                                <Button className=\"c-comment-submit\"onClick={handleNewComment}><FaArrowCircleRight/></Button>            \r\n                            </div>\r\n                        </Form>\r\n                    </Col>\r\n                    {activeUser.role===1 ?\r\n                        <div className=\"c-message-button\">\r\n                            <ButtonGroup className=\"mr-2\" aria-label=\"Basic example\">\r\n                                <Button onClick={()=>onUpdateMessage(index)}>Update</Button>\r\n                                <Button onClick={()=>onDeleteMessage(index)} variant=\"danger\">Delete</Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    :null }\r\n                </Row>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Image, Modal, Row } from 'react-bootstrap'\r\n\r\nexport default function NewMessageModal({show, onClose,onCreate, message, onUpdate}) {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [priority, setPriority] = useState(\"Info\");\r\n    const [img, setImg] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(message){\r\n            setTitle(message.title);\r\n            setDetails(message.details);\r\n            setPriority(message.priority);\r\n            setImg(message.img);\r\n        }\r\n    }, [message])\r\n    function handleFileChange(e){\r\n        if (e.target.files.length === 1) {\r\n            setImg(e.target.files[0]);\r\n        } else {\r\n            setImg(null);\r\n        }\r\n    }\r\n\r\n    function onMessageClose(){\r\n        clearForm();\r\n        onClose();\r\n    }\r\n    function clearForm(){\r\n        setTitle(\"\");\r\n        setDetails(\"\");\r\n        setPriority(\"\");\r\n        setImg(null);\r\n    }\r\n    function createMessage(){\r\n        if(message){\r\n            onUpdate(title,details,priority,img);\r\n        } else{    \r\n            onCreate(title,details,priority,img);\r\n        }\r\n        onMessageClose();\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={onMessageClose} className=\"c-new-tenant\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title className=\"text-center\">{message ? \"Update Message\" :\"New Message\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>   \r\n                <Form className=\"c-message-form\">\r\n                    <Form.Group as={Row} >\r\n                        <Form.Label column sm={4}>\r\n                            Message Title\r\n                        </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control value={title} placeholder=\"Title\" onChange={e => setTitle(e.target.value)}/>                        \r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formBasicDetail\">\r\n                        <Form.Label column sm={4}>Details: </Form.Label>\r\n                        <Col>\r\n                            <Form.Control sm={8} as=\"textarea\" placeholder=\"Details\" rows={3} \r\n                                value={details} onChange={e => setDetails(e.target.value)} />\r\n                        </Col>\r\n                    </Form.Group>                    \r\n                    <Form.Group as={Row} controlId=\"formBasicPriority\">\r\n                        <Form.Label column sm={4}>Priority: </Form.Label>\r\n                        <Col  sm={8}>\r\n                            <Form.Control as=\"select\" placeholder=\"Priority\" value={priority} onChange={e => setPriority(e.target.value)}>\r\n                                <option>Info</option>\r\n                                <option>Important</option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Group>  \r\n                    <Form.Group as={Row} controlId=\"formHorizontalImg\">\r\n                        <Form.Label column sm={4}>Message Image:</Form.Label>\r\n                        <Col>\r\n                            <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange}/>                        \r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Image src={img ? typeof img === 'object' ? URL.createObjectURL(img) : img : \"\" }/>\r\n                </Form>           \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onMessageClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={createMessage}>\r\n                    {message ? \"Update Message\" : \"Create Message\"}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Accordion, Alert, Button, Container, Spinner } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport DeleteModalComponent from '../../components/DeleteModalComponent/DeleteModalComponent';\r\nimport MessageCardComponent from '../../components/MessageCardComponent/MessageCardComponent';\r\nimport NewMessageModal from '../../components/NewMessageModal/NewMessageModal';\r\nimport PageHeaderComponent from '../../components/PageHeaderComponent/PageHeaderComponent';\r\nimport CommunityModel from '../../models/CommunityModel';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\nimport './MessagesPage.css';\r\n\r\nexport default function MessagesPage() {\r\n    const activeUser = useContext(ActiveUserContext)\r\n    const [show, setShow] = useState(false);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n\r\n    const [addingMessageError, setAddingMessageError] = useState(false)\r\n    const [newCommentError, setNewCommentError] = useState(false);\r\n    const [updateMessageError , setUpdateMessageError] = useState(false);\r\n    const [deleteMessageError , setDeletMessageError] = useState(false);\r\n    const [messages, setMessages] = useState(null);\r\n    const [filterText,setFilterText] = useState(\"\");\r\n    const [filterPriority, setFilterPriority] = useState(\"\");\r\n    const [sortBy, setSortBy] = useState(\"\");\r\n    const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function getAllMessages(){  \r\n            const communityMessages = await BackendDataService.getAllCommunityMessages(activeUser.community);\r\n            setMessages(communityMessages);     \r\n        }   \r\n        if (activeUser){\r\n            getAllMessages();\r\n           \r\n        }\r\n    }, [activeUser]);\r\n\r\n    if(!activeUser){\r\n        return <Redirect to =\"/\"/>\r\n    }\r\n    let loading=true\r\n    const filterSelection= [\"filter by priority:\",\"Info\",\"Important\"]\r\n    const sortBySelection=[\"Date\",\"Priority\"];\r\n    const community = new CommunityModel(activeUser.community); \r\n    let filteredMessages=[];\r\n    let MessageCards=[];\r\n    if(messages && messages.length>0)\r\n    {\r\n        filteredMessages = filteredMessages.concat(messages);\r\n\r\n        if(filterText){\r\n            filteredMessages = filteredMessages.filter(message=> {\r\n                return  message.title.includes(filterText) ||\r\n                        message.details.includes(filterText);\r\n            });\r\n        }\r\n        if(filterPriority && filterPriority!==\"filter by priority:\"){\r\n            filteredMessages = filteredMessages.filter(message=>message.priority===filterPriority)\r\n        }\r\n        if(sortBy){\r\n            filteredMessages.sort(function(a,b){\r\n                switch (sortBy){\r\n                    case \"Date\":\r\n                        return b.creatDate>a.createDate;\r\n                    case \"Priority\":\r\n                        return a.priority > b.priority;\r\n                    default:\r\n                        return -1;\r\n                }\r\n            })\r\n        }\r\n        MessageCards = filteredMessages.map((message, index) =>{\r\n            return <MessageCardComponent key={index} message={message} \r\n                                        index={index.toString()} \r\n                                        activeUser = {activeUser}\r\n                                        onUpdateMessage={onUpdateMessage} \r\n                                        onDeleteMessage={onDeleteMessage} \r\n                                        onNewCommentCreate={handleNewComment}\r\n                                        onReadMessage={handleReadMessage}/>           \r\n        });\r\n        loading=false;\r\n    }\r\n\r\n    function onClose(){\r\n        setShow(false);\r\n        setShowDelete(false);\r\n    }\r\n    function onUpdateMessage(index){\r\n        const currentMessage = filteredMessages[index];\r\n        setSelectedMessage(currentMessage);\r\n        setShow(true)\r\n    }\r\n    function onDeleteMessage(index){\r\n        const currentMessage = filteredMessages[index];\r\n        setSelectedMessage(currentMessage);\r\n        setShowDelete(true)\r\n\r\n    }\r\n    async function handleNewMessage(title,details,priority,img){\r\n        try{\r\n            const newMessage = await BackendDataService.addNewMessage(title,details,priority,img);\r\n            setMessages(messages.concat(newMessage));\r\n            setAddingMessageError(false);\r\n        } catch(e){\r\n            console.error(e);\r\n            setAddingMessageError(true);\r\n        }\r\n        setShow(false);\r\n    }\r\n    async function handleNewComment(comment, index){\r\n        try{\r\n            const currentMessage = filteredMessages[index];\r\n            const newMessage = await BackendDataService.addNewComment(currentMessage, comment);\r\n            const messageIndex = messages.findIndex(x=>x.id === currentMessage.id);\r\n            let tempMessageArr = [];\r\n            messages.splice(messageIndex,1, newMessage);\r\n            tempMessageArr = tempMessageArr.concat(messages);\r\n            setMessages(tempMessageArr);\r\n            setNewCommentError(false);\r\n        }catch(error){\r\n            console.error(error);\r\n            setNewCommentError(true);\r\n        }\r\n    }\r\n    async function handleUpdateMessage(title,details,priority,img){\r\n        if(title!==selectedMessage.title || \r\n            details!==selectedMessage.details || \r\n            priority!==selectedMessage.priority || \r\n            img!==selectedMessage.img){\r\n            try{     \r\n                const newMessage = await BackendDataService.updateMessage(selectedMessage, title,details,priority,img);\r\n                const messageIndex = messages.findIndex(x=>x.id === selectedMessage.id);\r\n                let tempMessageArr = [];\r\n                messages.splice(messageIndex,1, newMessage);\r\n                tempMessageArr = tempMessageArr.concat(messages);\r\n                setMessages(tempMessageArr);\r\n                setUpdateMessageError(false);\r\n            }              \r\n            catch(e){\r\n                console.log(e);\r\n                setUpdateMessageError(true);\r\n            }\r\n        }\r\n        setShow(false);\r\n        setSelectedMessage(\"\");\r\n    }\r\n    async function handleDeleteMessage(){\r\n        try{\r\n            BackendDataService.deleteMessage(selectedMessage);\r\n            const tempArr = messages.filter(message=>message.id!==selectedMessage.id);\r\n            setMessages(tempArr);\r\n            setDeletMessageError(false);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            setDeletMessageError(true);\r\n        }\r\n        setShowDelete(false)\r\n        setSelectedMessage(\"\");\r\n    }\r\n    async function handleReadMessage(index){\r\n        const currentMessage = filteredMessages[index];\r\n        const newMessage = await BackendDataService.addUserReadMessage(currentMessage, activeUser.id);\r\n        const messageIndex = messages.findIndex(x=>x.id === currentMessage.id);\r\n        let tempMessageArr = [];\r\n        messages.splice(messageIndex,1, newMessage);\r\n        tempMessageArr = tempMessageArr.concat(messages);\r\n        setMessages(tempMessageArr);\r\n    }\r\n    return (\r\n        <Container className=\"p-messages\">\r\n            <h2>Messages for building: {community? community.name:\"\"}  </h2>\r\n            <PageHeaderComponent placeholder=\"Filter by Text in Title or Details\"\r\n                                filterSelection={filterSelection}\r\n                                sortBy={sortBySelection} \r\n                                onSortChange={(data)=>setSortBy(data)}\r\n                                onFilterChange={(data)=>setFilterText(data)}\r\n                                onFilterSelectChange={(data)=> setFilterPriority(data)}\r\n                                action= {activeUser.role===1 ? \"New Message\" :\"\"}\r\n                                showModal={()=>setShow(true)}/>\r\n            {addingMessageError? <Alert variant=\"danger\">Error in adding new Message. Please try again.</Alert> : null}\r\n            {newCommentError? <Alert variant=\"danger\">Error in adding new comment. Please try again.</Alert> : null}\r\n            {updateMessageError? <Alert variant=\"danger\">Error in updating the selected message. Please try again.</Alert> :null}\r\n            {deleteMessageError? <Alert variant=\"danger\">Error in deleting the selected message. Please try again.</Alert> :null}\r\n            {loading? \r\n                <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                    />\r\n                    <span className=\"sr-only\">Signing...</span>\r\n                </Button>\r\n                :<Accordion>\r\n                    {MessageCards && MessageCards.length>0 ? MessageCards :null }\r\n                </Accordion>\r\n            }\r\n            <NewMessageModal show={show}\r\n                            onClose={onClose}\r\n                            onCreate={handleNewMessage}\r\n                            message={selectedMessage}\r\n                            onUpdate={handleUpdateMessage}/>\r\n            <DeleteModalComponent show={showDelete}\r\n                                onClose={onClose}\r\n                                title=\"Message\"\r\n                                name={selectedMessage? selectedMessage.title:null}\r\n                                onDelete={handleDeleteMessage}/>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function NotFoundPage() {\r\n    return (\r\n        <Container>\r\n            <img src=\"https://i.stack.imgur.com/6M513.png\" style={{\"width\":\"100%\"}} alt=\"Not Found\"></img>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Alert, Button, Form, Col, Container, Row, Image, Spinner } from 'react-bootstrap';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nimport './SignupPage.css';\r\nimport { Redirect } from 'react-router';\r\nimport {IoIosCreate} from 'react-icons/io';\r\nexport default function SignupPage({onLogin}) {\r\n    const [showSignupError, setShowSignupError] = useState(false);\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [img, setImg] = useState(null);\r\n    const [community, setCommunity] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [apt, setApt] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [signingUp, setSigningUp] = useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    async function signup(e) {\r\n        e.preventDefault();\r\n        setSigningUp(true);\r\n        let activeUser = null;\r\n        if(fullName && email && pwd && community && address && city){ \r\n            setShowSignupError(false);\r\n            try {\r\n                activeUser = await BackendDataService.signup(fullName, email, pwd,community, address,apt, city, img);\r\n                onLogin(activeUser);\r\n                setShowInvalidLogin(false);\r\n            } catch (error) {\r\n                console.error('Error while logging in user', error);\r\n                setShowInvalidLogin(true);\r\n                setSigningUp(false);\r\n            }\r\n        }\r\n        else{\r\n            setShowSignupError(true);\r\n            setSigningUp(false);\r\n        }\r\n    }\r\n\r\n    function handleFileChange(e) {\r\n        if (e.target.files.length === 1) {\r\n            setImg(e.target.files[0]);\r\n        } else {\r\n            setImg(null);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"p-signup\">\r\n\r\n            <Container fluid className=\"p-signup-form col-md-7 col-sm-3\">\r\n                <h4>Create a Committee Member Account</h4>\r\n                <p>Please fill in all the follwoing details:</p>\r\n                {showSignupError ? <Alert variant=\"danger\">Missing information! Fill in all details.</Alert> : null}\r\n                {showInvalidLogin ? <Alert variant=\"danger\">Error in Sign Up!</Alert> : null}\r\n                {signingUp ?\r\n                <Button variant=\"primary\" disabled>\r\n                    <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                    />\r\n                    <span className=\"sr-only\">Signing...</span>\r\n                </Button>\r\n                : <Form onSubmit={signup}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                        <Form.Label>Enter name: </Form.Label>                       \r\n                        <Form.Control type=\"text\" value={fullName} \r\n                                    placeholder=\"Full Name\" onChange={e => setFullName(e.target.value)}/>                        \r\n                    </Form.Group>              \r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address: </Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" \r\n                            value={email} onChange={e => setEmail(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password: </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" \r\n                            value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicBuilding\">\r\n                        <Form.Label>Building/Conmmunity Name</Form.Label>\r\n                        <Form.Control type=\"text\" value={community} onChange={e => setCommunity(e.target.value)} placeholder=\"Building/Community name\" />\r\n                    </Form.Group> \r\n                    <Row className=\"mb-3\">\r\n                        <Col sm={6}>\r\n                                <Form.Label>Address: </Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Address\"  value={address} onChange={e => setAddress(e.target.value)} />\r\n                        </Col>\r\n                        <Col  sm={6}>\r\n                                <Form.Label>Apartment: </Form.Label>\r\n                                <Form.Control type=\"number\" placeholder=\"Apartment\"  value={apt} onChange={e => setApt(e.target.value)} />\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicCity\">\r\n                        <Form.Label>City: </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"City\"  value={city} onChange={e => setCity(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formHorizontalImg\">\r\n                        <Form.Label>Tenant Image:</Form.Label>\r\n                        <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange}/>                        \r\n                    </Form.Group>\r\n                    <Image src={img ? URL.createObjectURL(img) : \"\"}/> \r\n                    <Button className=\"mb-3\" variant=\"success\" type=\"submit\" block>\r\n                        Signup<IoIosCreate/>\r\n                    </Button>\r\n                </Form>}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomeownerNavbar from './components/HomeownerNavbar/HomeownerNavbar';\nimport DashboardPage from './pages/DashboardPage/DashboardPage';\nimport Homepage from './pages/HomePage/HomePage';\nimport TenantsPage from './pages/TenantsPage/TenantsPage';\nimport MessagesPage from './pages/MessagesPage/MessagesPage';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport ActiveUserContext from './shared/ActiveUserContext'\nimport BackendDataService from './utils/BackendDataService';\n\nfunction App() {\n\n  const [activeUser, setActiveUser] = useState(BackendDataService.loadActiveUser());\n  \n  return (\n    <ActiveUserContext.Provider value={activeUser}>\n      <div className=\"App\">\n        <HashRouter>\n          <HomeownerNavbar onLogout={() => {setActiveUser(null); \n                                            localStorage.clear();\n                                          }}/>\n          <Switch>\n            <Route exact path=\"/\"><Homepage onLogin={user => setActiveUser(user)} /></Route>\n            <Route exact path=\"/tenants\"><TenantsPage/></Route>\n            <Route exact path=\"/signup\"><SignupPage onLogin={user => setActiveUser(user)}/></Route> \n            <Route exact path=\"/dashboard\"><DashboardPage/></Route>\n            <Route exact path=\"/messages\"><MessagesPage/></Route>\n            <Route path=\"/\"><NotFoundPage/></Route>          \n          </Switch>        \n        </HashRouter>\n      </div>\n    </ActiveUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Parse from 'parse'\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  '7DF9hNM7Lg0czEM0MSXeIyFeVLJjcQ6vLyHRylhg', // This is your Application ID\n  'bpB5hgraIysLbHEirYG55VLia5gcfaVZIt5aVkRg' // This is your Javascript key\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}