{"version":3,"sources":["shared/ActiveUserContext.js","components/HomeownerNavbar/HomeownerNavbar.js","pages/DashboardPage/DashboardPage.js","assets/background-image.jpg","assets/messages-icon.png","assets/tenants-icon.png","assets/voting-icon.png","assets/issues-icon.png","components/LandingPageCardComponent/LandingPageCardComponent.js","models/CommunityModel.js","models/UserModel.js","utils/BackendDataService.js","pages/HomePage/HomePage.js","pages/NotFoundPage/NotFoundPage.js","pages/SignupPage/SignupPage.js","App.js","reportWebVitals.js","index.js"],"names":["ActiveUserContext","createContext","HomeownerNavbar","onLogout","activeUser","useContext","Navbar","fixed","bg","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","eventKey","disabled","fname","lname","onClick","DashboardPage","to","LandingPageCardComponent","CardDeck","Card","Img","variant","src","tenant","Title","Text","message","votes","issues","CommunityModel","parseCommunity","this","name","get","street","city","UserModel","parseUser","email","role","communityId","apartment","pwd","password","a","Parse","User","logIn","community","address","apt","addNewCommunity","newCommunity","user","set","signUp","query","Query","equalTo","find","then","results","Object","destroyAll","CommunityTable","extend","save","communityItem","login","signup","Homepage","onLogin","useState","showInvalidLogin","setShowInvalidLogin","setEmail","setPwd","e","preventDefault","BackendDataService","console","error","Container","fluid","Alert","Form","onSubmit","Group","controlId","Control","type","placeholder","value","onChange","target","Button","block","image","NotFoundPage","style","alt","SignupPage","showSignupError","setShowSignupError","setFname","setLname","setCommunity","setAddress","setApt","setCity","Label","Row","Col","App","setActiveUser","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94e1dbf2.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;","import React, { useContext } from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nimport './HomeownerNavbar.css'\r\n\r\nexport default function HomeownerNavbar({onLogout}) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    return (\r\n        <Navbar fixed=\"top\" bg=\"light\" expand=\"lg\" className= \"c-homeowner-navbar\">\r\n        <Navbar.Brand href=\"#/\">HOA System</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n                {activeUser ? <Nav.Link href=\"#\">Messages</Nav.Link> : null}\r\n            </Nav>\r\n            <Nav className=\"ms-auto\">\r\n                {/* {!activeUser ? <Nav.Link href=\"#/login\">Login</Nav.Link> : null} */}\r\n                {!activeUser ? <Nav.Link href=\"#/signup\">Signup</Nav.Link> : null}\r\n                {activeUser ? <Nav.Link eventKey=\"disabled\" disabled>Welcome {activeUser.fname} {activeUser.lname}</Nav.Link> : null}\r\n                {activeUser ? <Nav.Link href=\"#\" onClick={() => onLogout()}>Logout</Nav.Link> : null}\r\n\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n        </Navbar>    \r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nexport default function DashboardPage() {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if(!activeUser){\r\n       return <Redirect to='/'/>\r\n    }\r\n    return (\r\n        <div>\r\n            Dashboard\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background-image.eb8723f6.jpg\";","export default __webpack_public_path__ + \"static/media/messages-icon.eb9fecda.png\";","export default __webpack_public_path__ + \"static/media/tenants-icon.64b5bfa4.png\";","export default __webpack_public_path__ + \"static/media/voting-icon.14692da9.png\";","export default __webpack_public_path__ + \"static/media/issues-icon.55281240.png\";","import React from 'react'\r\nimport { Card, CardDeck, CardGroup } from 'react-bootstrap'\r\nimport message from '../../assets/messages-icon.png';\r\nimport tenant from '../../assets/tenants-icon.png'\r\nimport votes from '../../assets/voting-icon.png'\r\nimport issues from '../../assets/issues-icon.png'\r\n\r\nexport default function LandingPageCardComponent() {\r\n    return (\r\n        <CardDeck>\r\n           <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={tenant}/>\r\n                <Card.Title>Managing building members</Card.Title>\r\n                <Card.Text>You as a committee owner can add or remove tenants from the building account.</Card.Text>\r\n            </Card>\r\n            <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={message}/>\r\n                <Card.Title>Manage messages system</Card.Title>\r\n                <Card.Text>You as a committee owner can post messages to all building tenants. \r\n                    Also can delete/update posted message if needed. A tenant can view, filter and search messages.</Card.Text>\r\n            </Card>\r\n            <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={votes}/>\r\n                <Card.Title>Manage voting system</Card.Title>\r\n                <Card.Text>You as a committee owner can create a new voting, \r\n                    updating the information of the vote and observe the voting on-going progress. \r\n                    A building member can view all active voting and participate in desicion.</Card.Text>\r\n            </Card>\r\n            <Card className=\"col-md-6 col-lg-3\">\r\n                <Card.Img variant=\"top\" src={issues}/>\r\n                <Card.Title>Manage building issues</Card.Title>\r\n                <Card.Text>You as a building member can report issues with priority, have the ability to view and update/delete/close the issue created by you.\r\n                    As a committee member you can view all issues and comment then if needed.</Card.Text>\r\n            </Card>\r\n\r\n            \r\n        </CardDeck>\r\n    )\r\n}\r\n","export default class CommunityModel{\r\n    constructor(parseCommunity){\r\n        this.id = parseCommunity.id;\r\n        this.name = parseCommunity.get(\"name\");\r\n        this.street = parseCommunity.get(\"street\");\r\n        this.city = parseCommunity.get(\"city\");\r\n        this.parseCommunity = parseCommunity;\r\n    }\r\n}","import Parse from 'parse';\r\n\r\nexport default class UserModel {\r\n    #parseUser\r\n    //role =1 community member role = 2 tenant\r\n    constructor(parseUser){\r\n        this.id = parseUser.id;\r\n        this.fname = parseUser.get(\"fname\");\r\n        this.lname = parseUser.get(\"lname\");\r\n        this.email = parseUser.get(\"email\");\r\n        this.role = parseUser.get(\"role\");\r\n        this.communityId = parseUser.get(\"communityId\");\r\n        this.apartment = parseUser.get(\"apartment\");\r\n        this.pwd = parseUser.password;\r\n        this.#parseUser = parseUser;\r\n\r\n    }\r\n    static activeUser = null;\r\n}\r\n    \r\n\r\n//     static async login(email, pwd) {\r\n//         const parseUser = await Parse.User.logIn(email, pwd);\r\n//         UserModel.activeUser = new UserModel(parseUser);\r\n//         return UserModel.activeUser;\r\n//     }\r\n//     static async signup(email, fname, lname, pwd) {\r\n//         const user = new Parse.User()\r\n//         user.set('username', email);\r\n//         user.set('email', email);\r\n//         user.set('fname', fname);\r\n//         user.set('lname', lname);\r\n//         user.set('password', pwd);\r\n\r\n//         const parseUser = await user.signUp();\r\n//         UserModel.activeUser = new UserModel(parseUser);\r\n//         return UserModel.activeUser;\r\n//     }\r\n//     static logout() {\r\n//         UserModel.activeUser = null;\r\n//         Parse.User.logOut();\r\n//     }\r\n//     static loadActiveUser() {\r\n//         UserModel.activeUser = Parse.User.current() ? new UserModel(Parse.User.current()) : null;\r\n//         return UserModel.activeUser;\r\n//     }\r\n// }\r\n","import Parse from 'parse';\r\nimport CommunityModel from '../models/CommunityModel';\r\nimport UserModel from '../models/UserModel';\r\n\r\nasync function login(email, pwd){\r\n    const parseUser = await Parse.User.logIn(email, pwd);\r\n    UserModel.activeUser = new UserModel(parseUser);\r\n    return UserModel.activeUser;\r\n}\r\nasync function signup(fname, lname, email, pwd, community, address, apt, city) {  \r\n    const newCommunity = await addNewCommunity(community, address, city); \r\n\r\n    const user = new Parse.User()\r\n    user.set('username', email);\r\n    user.set('email', email);\r\n    user.set('fname', fname);\r\n    user.set('lname', lname);\r\n    user.set('password', pwd);\r\n    user.set('apartment',apt);\r\n    user.set('role', 1)\r\n    user.set('community', newCommunity.parseCommunity);\r\n\r\n    try{\r\n        const parseUser = await user.signUp();\r\n        UserModel.activeUser = new UserModel(parseUser);\r\n        return UserModel.activeUser;\r\n    }\r\n    catch(e){\r\n        var query = new Parse.Query('Community');\r\n        query.equalTo('objectId', newCommunity.parseCommunity.id);\r\n        query.find().then(function(results) {\r\n            return Parse.Object.destroyAll(results);\r\n        });\r\n        throw(e);\r\n    }\r\n}\r\n\r\nasync function addNewCommunity(community, address, city){\r\n    const CommunityTable = Parse.Object.extend('Community');\r\n    const newCommunity = new CommunityTable();\r\n    newCommunity.set('name',community);\r\n    newCommunity.set('street',address);\r\n    newCommunity.set('city',city);\r\n    const parseCommunity = await newCommunity.save();\r\n    const communityItem = new CommunityModel(parseCommunity);\r\n    return communityItem;\r\n}\r\nexport default  {login,signup} ","import React, { useContext, useState } from 'react';\r\nimport \"./HomePage.css\";\r\nimport image from '../../assets/background-image.jpg';\r\nimport LandingPageCardComponent from '../../components/LandingPageCardComponent/LandingPageCardComponent';\r\nimport { Alert, Button, Container, Form } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\n\r\nexport default function Homepage({onLogin}) {\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/dashboard\"/>\r\n    }\r\n\r\n    async function login(e) {\r\n        e.preventDefault();\r\n        let activeUser = null;\r\n        try {\r\n            activeUser = await BackendDataService.login(email,pwd);\r\n            onLogin(activeUser);\r\n        } catch (error) {\r\n            console.error('Error while logging in user', error);\r\n            setShowInvalidLogin(true);\r\n        }\r\n    }\r\n    return (\r\n        <Container fluid className=\"p-home\">\r\n            <div className=\"p-home-header\">\r\n                <div className=\"p-home-title col-sm-6 col-md-8\">\r\n                    <h1 className=\"display-4\">Homeowner Association Management System</h1>\r\n                    <h3>All you need to handle your building </h3>\r\n                </div>\r\n                <div className=\"p-login col-md-3\">\r\n                    <h4>Login to Your Building</h4>\r\n                    <p>or <Link to=\"/signup\">create a new committee</Link></p>\r\n                    {showInvalidLogin ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n                    <Form onSubmit={login} className=\"mb-3\">                      \r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email address\" \r\n                                value={email} onChange={e => setEmail(e.target.value)} />\r\n                            <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" \r\n                                value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button  className=\"mb-3\" variant=\"primary\" type=\"submit\" block>\r\n                            Login\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-home-bg-img\">\r\n                <img  className=\"p-home-img\" src={image}></img>\r\n            </div>\r\n            <div className=\"p-home-footer\">\r\n                <LandingPageCardComponent/>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function NotFoundPage() {\r\n    return (\r\n        <Container>\r\n            <img src=\"https://i.stack.imgur.com/6M513.png\" style={{\"width\":\"100%\"}} alt=\"Not Found\"></img>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Alert, Button, Form, Col, Container, Row } from 'react-bootstrap';\r\nimport BackendDataService from '../../utils/BackendDataService';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nimport './SignupPage.css';\r\n\r\nexport default function SignupPage({onLogin}) {\r\n    const [showSignupError, setShowSignupError] = useState(false);\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n\r\n    const [fname, setFname] = useState(\"\");\r\n    const [lname, setLname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [community, setCommunity] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [apt, setApt] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n\r\n    async function signup(e) {\r\n        e.preventDefault();\r\n        let activeUser = null;\r\n        if(fname && lname && email && pwd && community && address && apt && city){ \r\n            setShowSignupError(false);\r\n            try {\r\n                activeUser = await BackendDataService.signup(fname,lname,email, pwd,community, address,apt, city);\r\n                onLogin(activeUser);\r\n                setShowInvalidLogin(false);\r\n            } catch (error) {\r\n                console.error('Error while logging in user', error);\r\n                setShowInvalidLogin(true);\r\n            }\r\n        }\r\n        else{\r\n            setShowSignupError(true);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"p-signup\">\r\n\r\n            <Container fluid className=\"p-signup-form col-md-7 col-sm-3\">\r\n                <h4>Create a Committee Member Account</h4>\r\n                <p>Please fill in all the follwoing details:</p>\r\n                {showSignupError ? <Alert variant=\"danger\">Missing information! Fill in all details.</Alert> : null}\r\n                {showInvalidLogin ? <Alert variant=\"danger\">Error in Sign Up!</Alert> : null}\r\n                <Form onSubmit={signup}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicFname\">\r\n                        <Form.Label>Enter name: </Form.Label>                       \r\n                            <Form.Control className=\"mb-3\" value={fname} placeholder=\"First name\" onChange={e => setFname(e.target.value)}/>                        \r\n                            <Form.Control className=\"mb-3\" value={lname} placeholder=\"Last name\" onChange={e => setLname(e.target.value)}/>\r\n                        </Form.Group>              \r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address: </Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" \r\n                            value={email} onChange={e => setEmail(e.target.value)} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password: </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" \r\n                            value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicBuilding\">\r\n                        <Form.Label>Building/Conmmunity Name</Form.Label>\r\n                        <Form.Control type=\"text\" value={community} onChange={e => setCommunity(e.target.value)} />\r\n                    </Form.Group> \r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            {/* <Form.Group inline className=\"mb-3\" controlId=\"formBasicAddress\"> */}\r\n                                <Form.Label>Address: </Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Address\"  value={address} onChange={e => setAddress(e.target.value)} />\r\n                            {/* </Form.Group> */}\r\n                        </Col>\r\n                        <Col>\r\n                            {/* <Form.Group inline className=\"mb-3\" controlId=\"formBasicApt\"> */}\r\n                                <Form.Label>Apartment: </Form.Label>\r\n                                <Form.Control type=\"number\" placeholder=\"Apartment\"  value={apt} onChange={e => setApt(e.target.value)} />\r\n                            {/* </Form.Group> */}\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicBuilding\">\r\n                        <Form.Label>City: </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"City\"  value={city} onChange={e => setCity(e.target.value)} />\r\n                    </Form.Group>\r\n        \r\n\r\n                    <Button className=\"mb-3\" variant=\"success\" type=\"submit\" block>\r\n                        Signup\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomeownerNavbar from './components/HomeownerNavbar/HomeownerNavbar';\nimport DashboardPage from './pages/DashboardPage/DashboardPage';\nimport Homepage from './pages/HomePage/HomePage';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport ActiveUserContext from './shared/ActiveUserContext'\n\nfunction App() {\n\n  const [activeUser, setActiveUser] = useState(null)\n  \n  return (\n    <ActiveUserContext.Provider value={activeUser}>\n      <div className=\"App\">\n        <HashRouter>\n          <HomeownerNavbar onLogout={() => setActiveUser(null)}/>\n          <Switch>\n            <Route exact path=\"/\" >\n              <Homepage onLogin={user => setActiveUser(user)} /></Route>\n            {/* <Route exact path=\"/login\"><LoginPage onLogin={user => setActiveUser(user)}/></Route>*/}\n            <Route exact path=\"/signup\">\n              <SignupPage onLogin={user => setActiveUser(user)}/></Route> \n            <Route exact path=\"/dashboard\">\n                <DashboardPage/>\n            </Route>\n            <Route path=\"/\"><NotFoundPage/></Route>          \n          </Switch>        \n        </HashRouter>\n      </div>\n    </ActiveUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Parse from 'parse'\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  '7DF9hNM7Lg0czEM0MSXeIyFeVLJjcQ6vLyHRylhg', // This is your Application ID\n  'bpB5hgraIysLbHEirYG55VLia5gcfaVZIt5aVkRg' // This is your Javascript key\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}